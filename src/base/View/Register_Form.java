package base.View;

import base.Connection.MyCNX;
import base.Validators.EmailValidUtil;
import base.Validators.PhoneNumberVerifif;
import base.Utils.PasswordUtils.VerifyPassUtil;
import base.Utils.PasswordUtils.PasswordUtils;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.border.Border;
import javax.swing.BorderFactory;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 * Form for registering new user in the system
 *
 * @author 0896
 */
public class Register_Form extends javax.swing.JFrame {

    /**
     * Creates new form Register_Form
     */
    // create a variable to set the image path in it
    String image_path = null;
    //Coordinats for jform mouse draging
    int xMouse;
    int yMouse;

    //Connection to SQL DB
    Connection connct = MyCNX.getConnection();

    public Register_Form() {
        initComponents();
        
         seticon();//Sets icon

        //Disables copy paste functionality 
        jTextField_Fullname.setTransferHandler(null);//Real name
        jTextField_Username.setTransferHandler(null);//Username
        jPasswordField_1.setTransferHandler(null);//Password
        jPasswordField_2.setTransferHandler(null);//Password retyped
        jTextField_Passphrase.setTransferHandler(null);//Passphrase
        jTextField_Phone.setTransferHandler(null);//Phone number
        jTextField_Email.setTransferHandler(null);//Email
        jTextField_Occupation.setTransferHandler(null);//Job title
        
        //Sets bacground to transparent
        this.setBackground(new Color(0, 0, 0, 0));
        
        jPnlShadowReg.setBackground(new Color(0, 0, 10, 10));

        // Centers the form
        this.setLocationRelativeTo(null);

        // Creates a button group for the radiobuttons
        ButtonGroup bg = new ButtonGroup();
        bg.add(jRadioButton_Male);
        bg.add(jRadioButton_Female);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPnlShadowReg = new javax.swing.JPanel();
        jPnlMainReg = new javax.swing.JPanel();
        jPnlTopRegister = new javax.swing.JPanel();
        jLabel_minimizeReg = new javax.swing.JLabel();
        jLabel_closeReg = new javax.swing.JLabel();
        jLablTopRegAcc = new javax.swing.JLabel();
        jPnlRegAllC = new javax.swing.JPanel();
        jButton_Register = new javax.swing.JButton();
        jLblName = new javax.swing.JLabel();
        jTextField_Fullname = new javax.swing.JTextField();
        jLblUrsName = new javax.swing.JLabel();
        jTextField_Username = new javax.swing.JTextField();
        jLblUrrPass = new javax.swing.JLabel();
        jLblUrrPassConf = new javax.swing.JLabel();
        jLblUsrPhone = new javax.swing.JLabel();
        jTextField_Phone = new javax.swing.JTextField();
        jLblUrrGend = new javax.swing.JLabel();
        jRadioButton_Male = new javax.swing.JRadioButton();
        jRadioButton_Female = new javax.swing.JRadioButton();
        jLblUrrImg = new javax.swing.JLabel();
        jButton_SelectImage = new javax.swing.JButton();
        jLabel_imgpath = new javax.swing.JLabel();
        jPasswordField_1 = new javax.swing.JPasswordField();
        jPasswordField_2 = new javax.swing.JPasswordField();
        jLabel_login = new javax.swing.JLabel();
        jTextField_Email = new javax.swing.JTextField();
        jLblUrrOC = new javax.swing.JLabel();
        jLblUsrMail = new javax.swing.JLabel();
        jTextField_Occupation = new javax.swing.JTextField();
        label_photo = new javax.swing.JLabel();
        jTextField_Passphrase = new javax.swing.JTextField();
        jLblUsrPasPhr = new javax.swing.JLabel();
        jPanel_title = new javax.swing.JPanel();
        jLblTitleReg = new javax.swing.JLabel();
        jLblPicReg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Register ");
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPnlShadowReg.setBackground(new java.awt.Color(0, 0, 0));

        jPnlMainReg.setBackground(new java.awt.Color(0, 84, 140));
        jPnlMainReg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPnlTopRegister.setBackground(new java.awt.Color(51, 51, 51));
        jPnlTopRegister.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_minimizeReg.setBackground(new java.awt.Color(153, 153, 153));
        jLabel_minimizeReg.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel_minimizeReg.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_minimizeReg.setText("  -");
        jLabel_minimizeReg.setToolTipText("");
        jLabel_minimizeReg.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jLabel_minimizeReg.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel_minimizeReg.setPreferredSize(new java.awt.Dimension(16, 24));
        jLabel_minimizeReg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_minimizeRegMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_minimizeRegMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_minimizeRegMouseExited(evt);
            }
        });
        jPnlTopRegister.add(jLabel_minimizeReg, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 0, 30, 30));

        jLabel_closeReg.setBackground(new java.awt.Color(255, 0, 51));
        jLabel_closeReg.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel_closeReg.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_closeReg.setText("  X");
        jLabel_closeReg.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jLabel_closeReg.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel_closeReg.setPreferredSize(new java.awt.Dimension(16, 24));
        jLabel_closeReg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_closeRegMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_closeRegMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_closeRegMouseExited(evt);
            }
        });
        jPnlTopRegister.add(jLabel_closeReg, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 0, 30, 30));

        jLablTopRegAcc.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLablTopRegAccMouseDragged(evt);
            }
        });
        jLablTopRegAcc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLablTopRegAccMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLablTopRegAccMousePressed(evt);
            }
        });
        jPnlTopRegister.add(jLablTopRegAcc, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 620, 30));

        jPnlMainReg.add(jPnlTopRegister, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 621, -1));

        jPnlRegAllC.setBackground(new java.awt.Color(52, 152, 219));
        jPnlRegAllC.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_Register.setBackground(new java.awt.Color(0, 84, 140));
        jButton_Register.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jButton_Register.setForeground(new java.awt.Color(255, 255, 255));
        jButton_Register.setText("Register");
        jButton_Register.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Register.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton_RegisterMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton_RegisterMouseExited(evt);
            }
        });
        jButton_Register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_RegisterActionPerformed(evt);
            }
        });
        jPnlRegAllC.add(jButton_Register, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 490, 260, 51));

        jLblName.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLblName.setForeground(new java.awt.Color(255, 255, 255));
        jLblName.setText("Full Name :");
        jPnlRegAllC.add(jLblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 70, -1, 30));

        jTextField_Fullname.setBackground(new java.awt.Color(62, 62, 62));
        jTextField_Fullname.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField_Fullname.setForeground(new java.awt.Color(255, 255, 255));
        jTextField_Fullname.setToolTipText("Enter your name");
        jTextField_Fullname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_FullnameActionPerformed(evt);
            }
        });
        jTextField_Fullname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_FullnameKeyTyped(evt);
            }
        });
        jPnlRegAllC.add(jTextField_Fullname, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 70, 270, -1));

        jLblUrsName.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLblUrsName.setForeground(new java.awt.Color(255, 255, 255));
        jLblUrsName.setText("Username :");
        jLblUrsName.setToolTipText("");
        jPnlRegAllC.add(jLblUrsName, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 110, -1, 30));

        jTextField_Username.setBackground(new java.awt.Color(62, 62, 62));
        jTextField_Username.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField_Username.setForeground(new java.awt.Color(255, 255, 255));
        jTextField_Username.setToolTipText("Chose username");
        jTextField_Username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_UsernameActionPerformed(evt);
            }
        });
        jTextField_Username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_UsernameKeyTyped(evt);
            }
        });
        jPnlRegAllC.add(jTextField_Username, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 110, 270, -1));

        jLblUrrPass.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLblUrrPass.setForeground(new java.awt.Color(255, 255, 255));
        jLblUrrPass.setText("Password :");
        jPnlRegAllC.add(jLblUrrPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 150, -1, 30));

        jLblUrrPassConf.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLblUrrPassConf.setForeground(new java.awt.Color(255, 255, 255));
        jLblUrrPassConf.setText("Confirm Password :");
        jPnlRegAllC.add(jLblUrrPassConf, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 190, 170, 30));

        jLblUsrPhone.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLblUsrPhone.setForeground(new java.awt.Color(255, 255, 255));
        jLblUsrPhone.setText("Phone :");
        jPnlRegAllC.add(jLblUsrPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 270, -1, 30));

        jTextField_Phone.setBackground(new java.awt.Color(62, 62, 62));
        jTextField_Phone.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField_Phone.setForeground(new java.awt.Color(255, 255, 255));
        jTextField_Phone.setToolTipText("Phone format : 0893805429");
        jTextField_Phone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_PhoneActionPerformed(evt);
            }
        });
        jTextField_Phone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_PhoneKeyTyped(evt);
            }
        });
        jPnlRegAllC.add(jTextField_Phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 270, 270, -1));

        jLblUrrGend.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLblUrrGend.setForeground(new java.awt.Color(255, 255, 255));
        jLblUrrGend.setText("Gender:");
        jPnlRegAllC.add(jLblUrrGend, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 400, -1, 30));

        jRadioButton_Male.setBackground(new java.awt.Color(52, 152, 219));
        jRadioButton_Male.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton_Male.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton_Male.setSelected(true);
        jRadioButton_Male.setText("Male");
        jRadioButton_Male.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPnlRegAllC.add(jRadioButton_Male, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 400, -1, -1));

        jRadioButton_Female.setBackground(new java.awt.Color(52, 152, 219));
        jRadioButton_Female.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton_Female.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton_Female.setText("Female");
        jRadioButton_Female.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPnlRegAllC.add(jRadioButton_Female, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 400, -1, -1));

        jLblUrrImg.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLblUrrImg.setForeground(new java.awt.Color(255, 255, 255));
        jLblUrrImg.setText("Image:");
        jPnlRegAllC.add(jLblUrrImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 440, -1, 30));

        jButton_SelectImage.setBackground(new java.awt.Color(0, 84, 140));
        jButton_SelectImage.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton_SelectImage.setForeground(new java.awt.Color(255, 255, 255));
        jButton_SelectImage.setText("Select image");
        jButton_SelectImage.setToolTipText("");
        jButton_SelectImage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_SelectImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SelectImageActionPerformed(evt);
            }
        });
        jPnlRegAllC.add(jButton_SelectImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 440, -1, -1));

        jLabel_imgpath.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel_imgpath.setForeground(new java.awt.Color(255, 255, 255));
        jPnlRegAllC.add(jLabel_imgpath, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 470, 560, 20));

        jPasswordField_1.setBackground(new java.awt.Color(62, 62, 62));
        jPasswordField_1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jPasswordField_1.setForeground(new java.awt.Color(255, 255, 255));
        jPasswordField_1.setToolTipText("Password should be at least 8 charecters Contains upper and lower case letter number and at least one special charecter [ @#$%^&+= ]");
        jPasswordField_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField_1ActionPerformed(evt);
            }
        });
        jPasswordField_1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordField_1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPasswordField_1KeyTyped(evt);
            }
        });
        jPnlRegAllC.add(jPasswordField_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 150, 270, -1));

        jPasswordField_2.setBackground(new java.awt.Color(62, 62, 62));
        jPasswordField_2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jPasswordField_2.setForeground(new java.awt.Color(255, 255, 255));
        jPasswordField_2.setToolTipText("Retype password");
        jPasswordField_2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPasswordField_2KeyTyped(evt);
            }
        });
        jPnlRegAllC.add(jPasswordField_2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 190, 270, -1));

        jLabel_login.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_login.setForeground(new java.awt.Color(0, 255, 255));
        jLabel_login.setText(">> Already Have an Account? Login! <<");
        jLabel_login.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel_login.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_loginMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_loginMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_loginMouseExited(evt);
            }
        });
        jPnlRegAllC.add(jLabel_login, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 540, -1, 40));

        jTextField_Email.setBackground(new java.awt.Color(62, 62, 62));
        jTextField_Email.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField_Email.setForeground(new java.awt.Color(255, 255, 255));
        jTextField_Email.setToolTipText("Enter your valid email adress ");
        jTextField_Email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_EmailKeyTyped(evt);
            }
        });
        jPnlRegAllC.add(jTextField_Email, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 310, 270, -1));

        jLblUrrOC.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLblUrrOC.setForeground(new java.awt.Color(255, 255, 255));
        jLblUrrOC.setText("Occupation :");
        jPnlRegAllC.add(jLblUrrOC, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 350, -1, 30));

        jLblUsrMail.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLblUsrMail.setForeground(new java.awt.Color(255, 255, 255));
        jLblUsrMail.setText("E-mail :");
        jPnlRegAllC.add(jLblUsrMail, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 310, -1, 30));

        jTextField_Occupation.setBackground(new java.awt.Color(62, 62, 62));
        jTextField_Occupation.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField_Occupation.setForeground(new java.awt.Color(255, 255, 255));
        jTextField_Occupation.setToolTipText("Enter your job title");
        jTextField_Occupation.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_OccupationKeyTyped(evt);
            }
        });
        jPnlRegAllC.add(jTextField_Occupation, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 350, 270, -1));

        label_photo.setBackground(new java.awt.Color(45, 189, 210));
        label_photo.setOpaque(true);
        jPnlRegAllC.add(label_photo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 150, 160));

        label_photo.setIcon(new ImageIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/login_user.png")).getImage().getScaledInstance(150, 160, Image.SCALE_SMOOTH)));

        jTextField_Passphrase.setBackground(new java.awt.Color(62, 62, 62));
        jTextField_Passphrase.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField_Passphrase.setForeground(new java.awt.Color(255, 255, 255));
        jTextField_Passphrase.setToolTipText("Chose passphrase");
        jTextField_Passphrase.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_PassphraseKeyTyped(evt);
            }
        });
        jPnlRegAllC.add(jTextField_Passphrase, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 230, 270, 30));

        jLblUsrPasPhr.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLblUsrPasPhr.setForeground(new java.awt.Color(255, 255, 255));
        jLblUsrPasPhr.setText("Set Passphrase :");
        jPnlRegAllC.add(jLblUsrPasPhr, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, -1, 30));

        jPanel_title.setBackground(new java.awt.Color(0, 84, 140));
        jPanel_title.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLblTitleReg.setFont(new java.awt.Font("Rockwell", 1, 38)); // NOI18N
        jLblTitleReg.setForeground(new java.awt.Color(255, 255, 255));
        jLblTitleReg.setText("Register");
        jPanel_title.add(jLblTitleReg, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, -10, -1, -1));

        jPnlRegAllC.add(jPanel_title, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 0, 210, 40));

        jLblPicReg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/RegisterMain.png"))); // NOI18N
        jPnlRegAllC.add(jLblPicReg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 590));

        jPnlMainReg.add(jPnlRegAllC, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 600, 590));

        javax.swing.GroupLayout jPnlShadowRegLayout = new javax.swing.GroupLayout(jPnlShadowReg);
        jPnlShadowReg.setLayout(jPnlShadowRegLayout);
        jPnlShadowRegLayout.setHorizontalGroup(
            jPnlShadowRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlShadowRegLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPnlMainReg, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPnlShadowRegLayout.setVerticalGroup(
            jPnlShadowRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlShadowRegLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPnlMainReg, javax.swing.GroupLayout.PREFERRED_SIZE, 642, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPnlShadowReg, java.awt.BorderLayout.PAGE_START);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        //On window closing close connection to SQL DB
        try {
            connct.close();//Close connection to SQL DB
            this.finalize();
        } catch (Throwable ex) {
            Logger.getLogger(JFrameClientCars.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

    private void jTextField_PassphraseKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_PassphraseKeyTyped
//Filter for cahrecter length of the passphrase of the user
        if ((jTextField_Passphrase.getText() + evt.getKeyChar()).length() > 32) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField_PassphraseKeyTyped

    private void jTextField_OccupationKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_OccupationKeyTyped
//Filter for cahrecter length of job titel of the user
        if (!Character.isAlphabetic(evt.getKeyChar()) || (jTextField_Username.getText() + evt.getKeyChar()).length() > 32) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField_OccupationKeyTyped

    private void jTextField_EmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_EmailKeyTyped
//Filter for cahrecter length of the user email
        if ((jTextField_Username.getText() + evt.getKeyChar()).length() > 128) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField_EmailKeyTyped

    private void jLabel_loginMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_loginMouseExited
//Label Alredy have ACC mouse exited returns to defaut 
        Border label_create_accont_border = BorderFactory.createMatteBorder(0, 0, 1, 0, Color.WHITE);
        jLabel_login.setBorder(label_create_accont_border);
    }//GEN-LAST:event_jLabel_loginMouseExited

    private void jLabel_loginMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_loginMouseEntered
//Label Alredy have ACC mouse entered sets text adn border colour
        Border label_border = BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(0, 255, 255));
        jLabel_login.setBorder(label_border);
    }//GEN-LAST:event_jLabel_loginMouseEntered

    private void jLabel_loginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_loginMouseClicked
//Label click on Alredy have account opens login form and disposes of register form
        Login_Form lf = new Login_Form();//Gets new instance of login form
        lf.setVisible(true);//sets login form to visible
        lf.pack();
        lf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);//Sets defaut operation on close of login form
        this.dispose();//Disposes of register acc form
    }//GEN-LAST:event_jLabel_loginMouseClicked

    private void jPasswordField_2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField_2KeyTyped
//Filter for the length of password retype field
        String pass2 = String.valueOf(jPasswordField_2.getPassword());
        if ((pass2 + evt.getKeyChar()).length() > 64) {
            evt.consume();
        }
    }//GEN-LAST:event_jPasswordField_2KeyTyped

    private void jPasswordField_1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField_1KeyTyped
//Filter for the length of password retype field
        String pass1 = String.valueOf(jPasswordField_1.getPassword());
        if ((pass1 + evt.getKeyChar()).length() > 64) {
            evt.consume();
        }
    }//GEN-LAST:event_jPasswordField_1KeyTyped

    private void jPasswordField_1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField_1KeyPressed

    }//GEN-LAST:event_jPasswordField_1KeyPressed

    private void jPasswordField_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField_1ActionPerformed

    }//GEN-LAST:event_jPasswordField_1ActionPerformed

    private void jButton_SelectImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SelectImageActionPerformed
        //Button Select photo and sets  image and set the image path into a jlabel
        JFileChooser chooser = new JFileChooser();//File choser
        chooser.setCurrentDirectory(new File(System.getProperty("user.home")));//Opens home directory in current user 
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("*.images", "jpg", "png");//file extention filter
        chooser.addChoosableFileFilter(fnef);//Sets the filter
        int ans = chooser.showSaveDialog(null);
        if (ans == JFileChooser.APPROVE_OPTION) {//if image chosen closes with yes
            File selectedPhoto = chooser.getSelectedFile();
            String path = selectedPhoto.getAbsolutePath();// sets chosen file's path
            if (MaxSizeImage(path)) {//Limit image size to 5.5 mb
                jLabel_imgpath.setText(path);//Sets label to show the path to the image
                label_photo.setIcon(resetImageSize(path, null));//Resizes selected iamge to fit in jlabel
                image_path = path;
            } else {//if photo is larger 
                System.out.println("Photo larger than 5.5 mb");
                JOptionPane.showMessageDialog(null, "Photo larger than 5.5 mb please select different photo", "Selected photo size is too large", 2);
            }
        } else {//Image choser exited or closed
            System.out.println("Photo Not Selected ");
        }
    }//GEN-LAST:event_jButton_SelectImageActionPerformed

    private void jTextField_PhoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_PhoneKeyTyped
        // Filter that allows only numbers to be entered the user's phone number textfield adn limit's the length of the phone number
        if (!Character.isDigit(evt.getKeyChar()) || (jTextField_Phone.getText() + evt.getKeyChar()).length() > 10) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField_PhoneKeyTyped

    private void jTextField_PhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_PhoneActionPerformed

    }//GEN-LAST:event_jTextField_PhoneActionPerformed

    private void jTextField_UsernameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_UsernameKeyTyped
//Filter the length of the user's username length
        if ((jTextField_Username.getText() + evt.getKeyChar()).length() > 32) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField_UsernameKeyTyped

    private void jTextField_UsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_UsernameActionPerformed

    }//GEN-LAST:event_jTextField_UsernameActionPerformed

    private void jTextField_FullnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_FullnameKeyTyped
//Filter the length of the user's real name's length
        if ((jTextField_Fullname.getText() + evt.getKeyChar()).length() > 32) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField_FullnameKeyTyped

    private void jTextField_FullnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_FullnameActionPerformed

    }//GEN-LAST:event_jTextField_FullnameActionPerformed

    private void jButton_RegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_RegisterActionPerformed
//Button register new user
        //Gets the info for the new user
        //Password generation
        String salt = PasswordUtils.generateSalt(512).get();//Generates secure random salt
        String password = String.valueOf(jPasswordField_1.getPassword());//Gets the strign value of the first password field 
        String key = PasswordUtils.hashPassword(password, salt).get();//Generates hashed key based on the passsword in the firs password field adn the generated secure random salt 
        //Get the rest of the  textfields
        String fname = jTextField_Fullname.getText();
        String username = jTextField_Username.getText();
        String phone = jTextField_Phone.getText();
        String gender = "Male";
        String email = jTextField_Email.getText();
        String jobtitle = jTextField_Occupation.getText();
        String passphrase = jTextField_Passphrase.getText();
//Radio button for the gender of the user
        if (jRadioButton_Female.isSelected()) {
            gender = "Female";
        }

        if (verifyFields()) {//Verify if the fields are not empty
            if (!checkUsername(username)) {//Verify if the username exists in the SQL DB
                if (VerifyPassUtil.validation_Password(password)) {//Validetes thet the  password is entered in the correct format
                    if (EmailValidUtil.getEmailVer(email)) {//Validates the email 
                        if (PhoneNumberVerifif.getPhoneNumberVer(phone)) {//Validates if the phone number is entered in the correect format
                            PreparedStatement ps = null;
                            //SQL Query
                            String registerUserQuery = "INSERT INTO `users`(`full_name`, `username`, `password`, `phone`, `gender`, `picture`,`email`,`jobtitle`,`dateCreated`,`secretKey`,`salt`) VALUES (?,?,?,?,?,?,?,?,?,?,?)";

                            try {
                                ps = connct.prepareStatement(registerUserQuery);
                                ps.setString(1, fname);
                                ps.setString(2, username);
                                ps.setString(3, key);
                                ps.setString(4, phone);
                                ps.setString(5, gender);
                                ps.setString(7, email);
                                ps.setString(8, jobtitle);
                                DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
                                LocalDateTime now = LocalDateTime.now();
                                ps.setString(9, dtf.format(now)); //timestamp
                                ps.setString(10, passphrase);
                                ps.setString(11, salt);
                                try {
                                    if (image_path != null) {//if picture is chosen
                                        InputStream image = new FileInputStream(new File(image_path));
                                        ps.setBlob(6, image);

                                    } else {//no picture is chosen
                                        //If pucture not chosen set bytes to null 
                                        ps.setNull(6, java.sql.Types.NULL);
                                    }

                                    if (ps.executeUpdate() != 0) {
                                        //If new ACC is registered
                                        JOptionPane.showMessageDialog(null, "Your Account Has Been Created");
                                        //Cleans the textfields adn sets the defaut icopn in the label if  new accaunt is succesfuly made 
                                        label_photo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Client_No_Pic-125x125.png")));
                                        image_path = null;
                                        jLabel_imgpath.setText("");
                                        jTextField_Fullname.setText("");
                                        jTextField_Username.setText("");
                                        jPasswordField_1.setText("");
                                        jPasswordField_2.setText("");
                                        jTextField_Passphrase.setText("");
                                        jTextField_Phone.setText("");
                                        jTextField_Email.setText("");
                                        jTextField_Occupation.setText("");
                                        jRadioButton_Male.setSelected(true);
                                    } else {//If new ACC is not registered
                                        JOptionPane.showMessageDialog(null, "Error: Check Your Information");
                                    }
                                } catch (FileNotFoundException ex) {
                                    Logger.getLogger(Register_Form.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            } catch (SQLException ex) {
                                Logger.getLogger(Register_Form.class.getName()).log(Level.SEVERE, null, ex);
                            } finally {
                            }
                        }//Validates if the phone number is entered in the correect format
                    } else {//Validates the email 
                        JOptionPane.showMessageDialog(null, "Email not correct Check Your Information", "Email error !", 2);
                    }
                } else {//Validetes thet the  password is entered in the correct format
                    JOptionPane.showMessageDialog(null, "Password not correct format it should be at least 8 charecters Contains upper and lower case letter number and at least one special charecter [ @#$%^&+= ]", "Email error !", 2);
                }
            }//Verify if the username exists in the SQL DB
        }//Verify if the fields are not empty
    }//GEN-LAST:event_jButton_RegisterActionPerformed

    private void jButton_RegisterMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_RegisterMouseExited
       //Sets jbutton background on mouse exited restores it to defaut
        jButton_Register.setBackground(new Color(0, 84, 140));
    }//GEN-LAST:event_jButton_RegisterMouseExited

    private void jButton_RegisterMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_RegisterMouseEntered
       // Sets jbutton background to new colour
        jButton_Register.setBackground(new Color(0, 101, 183));
    }//GEN-LAST:event_jButton_RegisterMouseEntered

    private void jLablTopRegAccMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLablTopRegAccMousePressed
     //Gets current mouse coordinates
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_jLablTopRegAccMousePressed

    private void jLablTopRegAccMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLablTopRegAccMouseClicked
        // 2 Clicks centr Form
        if (evt.getButton() == MouseEvent.BUTTON1 && evt.getClickCount() == 2) {
            //System.out.println("double clicked");
            this.setLocationRelativeTo(null);
        }
    }//GEN-LAST:event_jLablTopRegAccMouseClicked

    private void jLablTopRegAccMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLablTopRegAccMouseDragged
     //Functiuonality for draging of the form top bar  
        int coordX = evt.getXOnScreen();
        int coordY = evt.getYOnScreen();
        this.setLocation(coordX - xMouse, coordY - yMouse);
    }//GEN-LAST:event_jLablTopRegAccMouseDragged

    private void jLabel_closeRegMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_closeRegMouseExited
      // Lable Close mouse exited sets the defaut colour
        Border label_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.white);
        jLabel_closeReg.setBorder(label_border);
        jLabel_closeReg.setForeground(Color.white);
        jLabel_closeReg.setOpaque(false);
    }//GEN-LAST:event_jLabel_closeRegMouseExited

    private void jLabel_closeRegMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_closeRegMouseEntered
       // Lable Close mouse entered sets new colour
        Border label_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.gray);
        jLabel_closeReg.setBorder(label_border);
        jLabel_closeReg.setForeground(Color.gray);
        jLabel_closeReg.setOpaque(true);
        jLabel_closeReg.setBackground(Color.RED);
    }//GEN-LAST:event_jLabel_closeRegMouseEntered

    private void jLabel_closeRegMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_closeRegMouseClicked
       //On exit disposes of the form for registering users
        int result;
        //Dialog window 
        result = JOptionPane.showConfirmDialog(this, "Do you really want to exit ?",
                "Exit", 2);
        System.out.println(result);
        // yes -> 0
        // no ->  1
        // cancel  -> 2
        if (result == 0) {
           this.dispose();
        } else {
            this.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        }
    }//GEN-LAST:event_jLabel_closeRegMouseClicked

    private void jLabel_minimizeRegMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_minimizeRegMouseExited
       // Minimize client management window mouse exited
        Border label_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.white);
        jLabel_minimizeReg.setBorder(label_border);
        jLabel_minimizeReg.setForeground(Color.white);
        jLabel_minimizeReg.setOpaque(false);
    }//GEN-LAST:event_jLabel_minimizeRegMouseExited

    private void jLabel_minimizeRegMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_minimizeRegMouseEntered
       // Minimize client management window mouse entered
        Border label_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.gray);
        jLabel_minimizeReg.setBorder(label_border);
        jLabel_minimizeReg.setForeground(Color.gray);
        jLabel_minimizeReg.setOpaque(true);
        jLabel_closeReg.setBackground(new Color(153, 153, 153));
    }//GEN-LAST:event_jLabel_minimizeRegMouseEntered

    private void jLabel_minimizeRegMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_minimizeRegMouseClicked
       //Minimize
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabel_minimizeRegMouseClicked

    public boolean verifyFields() {
        //Function to verify the empty fields  

        //Gets the info for the the textfields
        String fname = jTextField_Fullname.getText();
        String uname = jTextField_Username.getText();
        String phone = jTextField_Phone.getText();
        String pass1 = String.valueOf(jPasswordField_1.getPassword());
        String pass2 = String.valueOf(jPasswordField_2.getPassword());
        String pasphrase = jTextField_Passphrase.getText();

        // check empty fields
        if (fname.trim().equals("") || uname.trim().equals("") || phone.trim().equals("")
                || pass1.trim().equals("") || pass2.trim().equals("") || pasphrase.trim().equals("")) {
            JOptionPane.showMessageDialog(null, "One Or More Fields Are Empty", "Empty Fields", 2);
            return false;
        } // Check if the two password matches
        else if (!pass1.equals(pass2)) {
            JOptionPane.showMessageDialog(null, "Password Doesn't Match", "Confirm Password", 2);
            return false;
        } // If everything is ok
        else {
            return true;
        }
    }

    // create a unction to check if the entred username already exists in the database
    public boolean checkUsername(String username) {
//Check if the username alredy exists in the SQL DB
        PreparedStatement st;
        ResultSet rs;
        boolean username_exist = false;
//SQL query
        String query = "SELECT * FROM `users` WHERE `username` = ?";

        try {
            st = connct.prepareStatement(query);
            st.setString(1, username);
            rs = st.executeQuery();

            if (rs.next()) {
                username_exist = true;
                JOptionPane.showMessageDialog(null, "This Username is Already Taken, Choose Another One", "Username Failed", 2);
            }

        } catch (SQLException ex) {
            Logger.getLogger(Register_Form.class.getName()).log(Level.SEVERE, null, ex);
        }

        return username_exist;
    }

    String photopath = "";

    public ImageIcon resetImageSize(String photopath, byte[] photo) {
        //Resizes the image in the label 
        ImageIcon myPhoto = null;
        if (photopath != null) {
            myPhoto = new ImageIcon(photopath);
        } else {
            myPhoto = new ImageIcon(photo);
        }
        Image img = myPhoto.getImage();
        Image img1 = img.getScaledInstance(label_photo.getWidth(), label_photo.getHeight(),
                Image.SCALE_SMOOTH);
        ImageIcon ph = new ImageIcon(img1);
        return ph;
    }

    public boolean MaxSizeImage(String imagePath) {
        //Limits iamge size
        boolean temp = false;
        File file = new File(imagePath);
        long length = file.length();

        if (length < 5500000) //limits iamge size to  5.5 mb
        {
            temp = true;
        }

        return temp;
    }

    private void seticon() {
        //Sets form icon
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Icons/wrench.png")));
    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Register_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Register_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Register_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Register_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(() -> {
//            new Register_Form().setVisible(true);
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Register;
    private javax.swing.JButton jButton_SelectImage;
    private javax.swing.JLabel jLabel_closeReg;
    private javax.swing.JLabel jLabel_imgpath;
    private javax.swing.JLabel jLabel_login;
    private javax.swing.JLabel jLabel_minimizeReg;
    private javax.swing.JLabel jLablTopRegAcc;
    private javax.swing.JLabel jLblName;
    private javax.swing.JLabel jLblPicReg;
    private javax.swing.JLabel jLblTitleReg;
    private javax.swing.JLabel jLblUrrGend;
    private javax.swing.JLabel jLblUrrImg;
    private javax.swing.JLabel jLblUrrOC;
    private javax.swing.JLabel jLblUrrPass;
    private javax.swing.JLabel jLblUrrPassConf;
    private javax.swing.JLabel jLblUrsName;
    private javax.swing.JLabel jLblUsrMail;
    private javax.swing.JLabel jLblUsrPasPhr;
    private javax.swing.JLabel jLblUsrPhone;
    private javax.swing.JPanel jPanel_title;
    private javax.swing.JPasswordField jPasswordField_1;
    private javax.swing.JPasswordField jPasswordField_2;
    private javax.swing.JPanel jPnlMainReg;
    private javax.swing.JPanel jPnlRegAllC;
    private javax.swing.JPanel jPnlShadowReg;
    private javax.swing.JPanel jPnlTopRegister;
    private javax.swing.JRadioButton jRadioButton_Female;
    private javax.swing.JRadioButton jRadioButton_Male;
    private javax.swing.JTextField jTextField_Email;
    private javax.swing.JTextField jTextField_Fullname;
    private javax.swing.JTextField jTextField_Occupation;
    private javax.swing.JTextField jTextField_Passphrase;
    private javax.swing.JTextField jTextField_Phone;
    private javax.swing.JTextField jTextField_Username;
    private javax.swing.JLabel label_photo;
    // End of variables declaration//GEN-END:variables
}
