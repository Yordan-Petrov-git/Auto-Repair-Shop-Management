package base.View;

import base.Cars_Db_clients;
import base.Connection.MyCNX;
import base.LogInAs;
import base.Parts_serv;
import base.RepairsService;
import base.TableUtils.ResizeForJTables;
import base.User;
import com.model.table.ServicesTableModel;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 * Form for repairs and services entry
 *
 * @author 0896
 */
public class JFrame_Repairs_Maintenance extends javax.swing.JFrame {

    //Coordinats for jform mouse draging
    int xMouse;
    int yMouse;
    //Table model 
    ServicesTableModel servicesTableModel;
    //Connection to SQL DB
    Connection connct = MyCNX.getConnection();
    //SQL Prepared Statement
    private PreparedStatement preparedStatement;
    //Pagination navigaion
    Integer page = 1;
    Integer rowCountPerPage = 5;
    Integer totalPage = 1;
    Integer totalData = 0;

    /**
     * Creates new form JFrame_Repairs_Maintenance
     */
    public JFrame_Repairs_Maintenance() {
        initComponents();

         seticon();//Sets icon
        
        //Disables copy pasete functionality 
        jTxtFldPrice.setTransferHandler(null);
        jTxtFldTax.setTransferHandler(null);
        jTxtFldDiscount.setTransferHandler(null);
        jTxtFldTime.setTransferHandler(null);
        jTxtArDesc.setTransferHandler(null);
        //Centers the form
        this.setLocationRelativeTo(null);
        //Sets bacgroung to transparent
        this.setBackground(new Color(0, 0, 0, 0));
        //Add values to combobox for pagination
        jComboBoxPage.addItem("10");
        jComboBoxPage.addItem("20");
        jComboBoxPage.addItem("30");
        jComboBoxPage.addItem("40");
        jComboBoxPage.addItem("50");
        jComboBoxPage.addItem("60");
        jComboBoxPage.addItem("70");
        jComboBoxPage.addItem("80");
        jComboBoxPage.addItem("90");
        jComboBoxPage.addItem("100");
        jComboBoxPage.addItemListener(new ItemListener() {
            // Change data in jtable on combobox change 
            public void itemStateChanged(ItemEvent e) {
                initPagination();//Shows specific amaunt of rows in the jtable on combobox selection
            }
        });
        initPagination();//Shows first paged rows in the jtable 
    }

    private void initPagination() {
        //Initializes paging
        //Gets the number of all the rows in the SQL DB
        totalData = count();
        //For testing
        System.out.println(totalData);

        rowCountPerPage = Integer.valueOf(jComboBoxPage.getSelectedItem().toString());
        Double totalPageD = Math.ceil(totalData.doubleValue() / rowCountPerPage.doubleValue());
        totalPage = totalPageD.intValue();
        //Buttons for page navigation
        //Button for first page previous page
        if (page.equals(1)) {//For first and previous buttins
            jButtonFirst.setEnabled(false);
            jButtonPrevious.setEnabled(false);
        } else {
            jButtonFirst.setEnabled(true);
            jButtonPrevious.setEnabled(true);
        }
        //Buttons for last page next page
        if (page.equals(totalPage)) {//For last and next buttons
            jButtonLast.setEnabled(false);
            jButtonNext.setEnabled(false);
        } else {
            jButtonLast.setEnabled(true);
            jButtonNext.setEnabled(true);
        }

        if (page > totalPage) {
            page = 1;
        }
        //New instance of table for services
        servicesTableModel = new ServicesTableModel();
        servicesTableModel.setList(findAll(page, rowCountPerPage));//populate table
        jTblServ.setModel(servicesTableModel);//Sets teble model 

        jLabelStatusHalaman.setText("Page " + page + " for " + totalPage);//Pages counter
        jLabelTotalData.setText(("Row count " + totalData));//Row counter
        ResizeForJTables.autoResizeColumn(jTblServ);//resizes the jtable
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrmAddCarClient = new javax.swing.JFrame();
        jPnlTop2 = new javax.swing.JPanel();
        jLabel_minAddCC = new javax.swing.JLabel();
        jLblTopCloseCarCL = new javax.swing.JLabel();
        jLblTopAddCarCL = new javax.swing.JLabel();
        jPnlMainAddCarCL = new javax.swing.JPanel();
        jPnlSearchby = new javax.swing.JPanel();
        jTxtFldSrchCL = new javax.swing.JTextField();
        jCmbBoxSrchorder = new javax.swing.JComboBox<>();
        jCmbBoxSrchCL = new javax.swing.JComboBox<>();
        jLblSearchTitle = new javax.swing.JLabel();
        jPnlChoseClient = new javax.swing.JPanel();
        jLblClName = new javax.swing.JLabel();
        jLbIDCl = new javax.swing.JLabel();
        jTxtFldCLid = new javax.swing.JTextField();
        jTxtFldCLName = new javax.swing.JTextField();
        jBtnChoseCl = new javax.swing.JButton();
        jPnlChoseCar = new javax.swing.JPanel();
        jTxtFldRegNCA = new javax.swing.JTextField();
        jLblCarAddNumReg = new javax.swing.JLabel();
        jBtnAddCarToService = new javax.swing.JButton();
        jLblSrchByCar = new javax.swing.JLabel();
        jCmbBoxSrchItemCar = new javax.swing.JComboBox<>();
        jTxtFldSrchBycar = new javax.swing.JTextField();
        jCmbBoxSrchOrderCar = new javax.swing.JComboBox<>();
        jPnlTablCl = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTblChoseClient = new javax.swing.JTable();
        jPnlTablCars = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTblCarAdd = new javax.swing.JTable();
        jBtnBack = new javax.swing.JButton();
        jLblPic = new javax.swing.JLabel();
        jFrmAddParts = new javax.swing.JFrame();
        jPnlAddPartsMain = new javax.swing.JPanel();
        jPnlOEMTbl = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPnlOEMadd = new javax.swing.JPanel();
        jBtnAddOEMpART = new javax.swing.JButton();
        jTxtFldOEMadd = new javax.swing.JTextField();
        jCmbBoxSrchByItemPart = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jLblTitleSrch = new javax.swing.JLabel();
        jCmbBoxSrchByPartOrder = new javax.swing.JComboBox<>();
        jPnlTopPartsAdd = new javax.swing.JPanel();
        jLblTopOfPrtsClose = new javax.swing.JLabel();
        jLblTopOfPrtsMin = new javax.swing.JLabel();
        jLblTopPartsAdd = new javax.swing.JLabel();
        jPnlTop = new javax.swing.JPanel();
        jLabel_minimizeScrv = new javax.swing.JLabel();
        jLabel_closeScrv = new javax.swing.JLabel();
        jLblTopScrv = new javax.swing.JLabel();
        jPnlMain = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTblServ = new javax.swing.JTable();
        jCmbBxSrchItems = new javax.swing.JComboBox<>();
        jTxtFldSrch = new javax.swing.JTextField();
        jCmbBxOrdrAscDsc = new javax.swing.JComboBox<>();
        jLblSrchByItm = new javax.swing.JLabel();
        jBtnHideTbl = new javax.swing.JButton();
        jBtnAddPart = new javax.swing.JButton();
        jBtnAddClCar = new javax.swing.JButton();
        jBtnAddToTbl = new javax.swing.JButton();
        jBtnUpdateToTbl = new javax.swing.JButton();
        jBtnDeleteToTbl = new javax.swing.JButton();
        jLblCurrency = new javax.swing.JLabel();
        jLblPercVAT = new javax.swing.JLabel();
        jLblTiemH = new javax.swing.JLabel();
        jLblTimeServ = new javax.swing.JLabel();
        jTxtFldTime = new javax.swing.JTextField();
        jTxtFldDiscount = new javax.swing.JTextField();
        jLblPercDiscount = new javax.swing.JLabel();
        jLblDiscServ = new javax.swing.JLabel();
        jLblTAXServ = new javax.swing.JLabel();
        jTxtFldTax = new javax.swing.JTextField();
        jTxtFldPrice = new javax.swing.JTextField();
        jLblPriceServ = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTxtArDesc = new javax.swing.JTextArea();
        jCmbBxRepTyp = new javax.swing.JComboBox<>();
        jTxtFldIDServ = new javax.swing.JTextField();
        jLblIDServ = new javax.swing.JLabel();
        jLblTypeServ = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPnlPaging = new javax.swing.JPanel();
        jButtonLast = new javax.swing.JButton();
        jButtonNext = new javax.swing.JButton();
        jComboBoxPage = new javax.swing.JComboBox();
        jButtonPrevious = new javax.swing.JButton();
        jButtonFirst = new javax.swing.JButton();
        jLabelStatusHalaman = new javax.swing.JLabel();
        jLabelTotalData = new javax.swing.JLabel();
        jLblPicMain = new javax.swing.JLabel();

        jFrmAddCarClient.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jFrmAddCarClient.setTitle("Add Client and Car");
        jFrmAddCarClient.setUndecorated(true);
        jFrmAddCarClient.setResizable(false);
        jFrmAddCarClient.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPnlTop2.setBackground(new java.awt.Color(51, 51, 51));
        jPnlTop2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_minAddCC.setBackground(new java.awt.Color(153, 153, 153));
        jLabel_minAddCC.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel_minAddCC.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_minAddCC.setText("  -");
        jLabel_minAddCC.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jLabel_minAddCC.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel_minAddCC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_minAddCCMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_minAddCCMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_minAddCCMouseExited(evt);
            }
        });
        jPnlTop2.add(jLabel_minAddCC, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 0, 30, 30));

        jLblTopCloseCarCL.setBackground(new java.awt.Color(255, 0, 51));
        jLblTopCloseCarCL.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLblTopCloseCarCL.setForeground(new java.awt.Color(255, 255, 255));
        jLblTopCloseCarCL.setText("  X");
        jLblTopCloseCarCL.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jLblTopCloseCarCL.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLblTopCloseCarCL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLblTopCloseCarCLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLblTopCloseCarCLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLblTopCloseCarCLMouseExited(evt);
            }
        });
        jPnlTop2.add(jLblTopCloseCarCL, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 0, 30, 30));

        jLblTopAddCarCL.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLblTopAddCarCLMouseDragged(evt);
            }
        });
        jLblTopAddCarCL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLblTopAddCarCLMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLblTopAddCarCLMousePressed(evt);
            }
        });
        jPnlTop2.add(jLblTopAddCarCL, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1070, 30));

        jFrmAddCarClient.getContentPane().add(jPnlTop2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1070, -1));

        jPnlMainAddCarCL.setBackground(new java.awt.Color(0, 84, 140));
        jPnlMainAddCarCL.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPnlSearchby.setBackground(new java.awt.Color(0, 84, 140));
        jPnlSearchby.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTxtFldSrchCL.setBackground(new java.awt.Color(62, 62, 62));
        jTxtFldSrchCL.setForeground(new java.awt.Color(255, 255, 255));
        jTxtFldSrchCL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTxtFldSrchCLKeyReleased(evt);
            }
        });
        jPnlSearchby.add(jTxtFldSrchCL, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 210, 30));

        jCmbBoxSrchorder.setMaximumRowCount(2);
        jCmbBoxSrchorder.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ASC", "DESC" }));
        jPnlSearchby.add(jCmbBoxSrchorder, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 90, -1));

        jCmbBoxSrchCL.setMaximumRowCount(4);
        jCmbBoxSrchCL.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Name", "Family", "Phone" }));
        jPnlSearchby.add(jCmbBoxSrchCL, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 110, -1));

        jLblSearchTitle.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLblSearchTitle.setForeground(new java.awt.Color(255, 255, 255));
        jLblSearchTitle.setText("Search by :");
        jPnlSearchby.add(jLblSearchTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 110, 20));

        jPnlMainAddCarCL.add(jPnlSearchby, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 250, 110));

        jPnlChoseClient.setBackground(new java.awt.Color(0, 84, 140));
        jPnlChoseClient.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLblClName.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLblClName.setForeground(new java.awt.Color(255, 255, 255));
        jLblClName.setText("Name :");
        jPnlChoseClient.add(jLblClName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        jLbIDCl.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLbIDCl.setForeground(new java.awt.Color(255, 255, 255));
        jLbIDCl.setText("ID :");
        jPnlChoseClient.add(jLbIDCl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jTxtFldCLid.setEditable(false);
        jTxtFldCLid.setBackground(new java.awt.Color(62, 62, 62));
        jTxtFldCLid.setForeground(new java.awt.Color(255, 255, 255));
        jTxtFldCLid.setFocusable(false);
        jTxtFldCLid.setOpaque(false);
        jPnlChoseClient.add(jTxtFldCLid, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 130, -1));

        jTxtFldCLName.setEditable(false);
        jTxtFldCLName.setBackground(new java.awt.Color(62, 62, 62));
        jTxtFldCLName.setForeground(new java.awt.Color(255, 255, 255));
        jTxtFldCLName.setFocusable(false);
        jTxtFldCLName.setOpaque(false);
        jPnlChoseClient.add(jTxtFldCLName, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 130, -1));

        jBtnChoseCl.setText("Chose client");
        jBtnChoseCl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnChoseClActionPerformed(evt);
            }
        });
        jPnlChoseClient.add(jBtnChoseCl, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 110, 30));

        jPnlMainAddCarCL.add(jPnlChoseClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 260, 130));

        jPnlChoseCar.setBackground(new java.awt.Color(0, 84, 140));
        jPnlChoseCar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTxtFldRegNCA.setEditable(false);
        jTxtFldRegNCA.setBackground(new java.awt.Color(62, 62, 62));
        jTxtFldRegNCA.setForeground(new java.awt.Color(255, 255, 255));
        jTxtFldRegNCA.setFocusable(false);
        jTxtFldRegNCA.setOpaque(false);
        jPnlChoseCar.add(jTxtFldRegNCA, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 180, -1));

        jLblCarAddNumReg.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLblCarAddNumReg.setForeground(new java.awt.Color(255, 255, 255));
        jLblCarAddNumReg.setText("Registration number :");
        jPnlChoseCar.add(jLblCarAddNumReg, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, 20));

        jBtnAddCarToService.setText("Add car");
        jBtnAddCarToService.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAddCarToServiceActionPerformed(evt);
            }
        });
        jPnlChoseCar.add(jBtnAddCarToService, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, 120, 30));

        jLblSrchByCar.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLblSrchByCar.setForeground(new java.awt.Color(255, 255, 255));
        jLblSrchByCar.setText("Search by :");
        jPnlChoseCar.add(jLblSrchByCar, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, -1, -1));

        jCmbBoxSrchItemCar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "VIN", "Reg Number", "Make", "Model", "Type", "Fueling", "Gearbox", "Engine cc", "Power", " " }));
        jPnlChoseCar.add(jCmbBoxSrchItemCar, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 170, -1, -1));

        jTxtFldSrchBycar.setBackground(new java.awt.Color(62, 62, 62));
        jTxtFldSrchBycar.setForeground(new java.awt.Color(255, 255, 255));
        jTxtFldSrchBycar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTxtFldSrchBycarKeyReleased(evt);
            }
        });
        jPnlChoseCar.add(jTxtFldSrchBycar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 220, 30));

        jCmbBoxSrchOrderCar.setMaximumRowCount(2);
        jCmbBoxSrchOrderCar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ASC", "DESC" }));
        jPnlChoseCar.add(jCmbBoxSrchOrderCar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 80, -1));

        jPnlMainAddCarCL.add(jPnlChoseCar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 260, 260));

        jPnlTablCl.setBackground(new java.awt.Color(0, 84, 140));
        jPnlTablCl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTblChoseClient.setBackground(new java.awt.Color(62, 62, 62));
        jTblChoseClient.setForeground(new java.awt.Color(255, 255, 255));
        jTblChoseClient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Family", "Phone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTblChoseClient.getTableHeader().setReorderingAllowed(false);
        jTblChoseClient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTblChoseClientMouseClicked(evt);
            }
        });
        jTblChoseClient.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTblChoseClientKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jTblChoseClient);

        jPnlTablCl.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jPnlMainAddCarCL.add(jPnlTablCl, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 0, 470, 440));

        jPnlTablCars.setBackground(new java.awt.Color(0, 84, 140));
        jPnlTablCars.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTblCarAdd.setBackground(new java.awt.Color(62, 62, 62));
        jTblCarAdd.setForeground(new java.awt.Color(255, 255, 255));
        jTblCarAdd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "REG", "VIN", "MAKE", "MODEL", "Mileage", "type", "fueling", "gearbox", "drivetrain", "CC", "POWER"
            }
        ));
        jTblCarAdd.getTableHeader().setReorderingAllowed(false);
        jTblCarAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTblCarAddMouseClicked(evt);
            }
        });
        jTblCarAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTblCarAddKeyReleased(evt);
            }
        });
        jScrollPane4.setViewportView(jTblCarAdd);

        jPnlTablCars.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 750, 490));

        jPnlMainAddCarCL.add(jPnlTablCars, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 10, 780, 510));

        jBtnBack.setText("Back");
        jBtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnBackActionPerformed(evt);
            }
        });
        jPnlMainAddCarCL.add(jBtnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 430, 80, -1));

        jLblPic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Aqua Marine.jpg"))); // NOI18N
        jPnlMainAddCarCL.add(jLblPic, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 6, 1050, 550));

        jFrmAddCarClient.getContentPane().add(jPnlMainAddCarCL, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 1070, 580));

        jFrmAddParts.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jFrmAddParts.setUndecorated(true);
        jFrmAddParts.setResizable(false);
        jFrmAddParts.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPnlAddPartsMain.setBackground(new java.awt.Color(0, 84, 140));
        jPnlAddPartsMain.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPnlOEMTbl.setBackground(new java.awt.Color(0, 84, 140));
        jPnlOEMTbl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "OEM", "Origin", "For Make", "For Model", "Part Make", "For system"
            }
        ));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTable1);

        jPnlOEMTbl.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 760, 500));

        jPnlAddPartsMain.add(jPnlOEMTbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, 770, 520));

        jPnlOEMadd.setBackground(new java.awt.Color(0, 84, 140));
        jPnlOEMadd.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jBtnAddOEMpART.setText("Add ");
        jBtnAddOEMpART.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAddOEMpARTActionPerformed(evt);
            }
        });
        jPnlOEMadd.add(jBtnAddOEMpART, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, 100, -1));

        jTxtFldOEMadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtFldOEMaddActionPerformed(evt);
            }
        });
        jPnlOEMadd.add(jTxtFldOEMadd, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 220, -1));

        jCmbBoxSrchByItemPart.setMaximumRowCount(2);
        jCmbBoxSrchByItemPart.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ASC", "DESC" }));
        jPnlOEMadd.add(jCmbBoxSrchByItemPart, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 80, -1));
        jPnlOEMadd.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 210, -1));

        jLblTitleSrch.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLblTitleSrch.setForeground(new java.awt.Color(255, 255, 255));
        jLblTitleSrch.setText("Search by :");
        jPnlOEMadd.add(jLblTitleSrch, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, -1, -1));

        jCmbBoxSrchByPartOrder.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "OEM", "Origin", "For Make", "For Model", "Part Make", "For System" }));
        jPnlOEMadd.add(jCmbBoxSrchByPartOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 180, 100, -1));

        jPnlAddPartsMain.add(jPnlOEMadd, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 250, 250));

        jFrmAddParts.getContentPane().add(jPnlAddPartsMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 1070, 570));

        jPnlTopPartsAdd.setBackground(new java.awt.Color(51, 51, 51));
        jPnlTopPartsAdd.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLblTopOfPrtsClose.setBackground(new java.awt.Color(255, 0, 51));
        jLblTopOfPrtsClose.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLblTopOfPrtsClose.setForeground(new java.awt.Color(255, 255, 255));
        jLblTopOfPrtsClose.setText("  x");
        jLblTopOfPrtsClose.setToolTipText("");
        jLblTopOfPrtsClose.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLblTopOfPrtsClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLblTopOfPrtsCloseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLblTopOfPrtsCloseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLblTopOfPrtsCloseMouseExited(evt);
            }
        });
        jPnlTopPartsAdd.add(jLblTopOfPrtsClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 0, 30, 30));

        jLblTopOfPrtsMin.setBackground(new java.awt.Color(102, 102, 102));
        jLblTopOfPrtsMin.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLblTopOfPrtsMin.setForeground(new java.awt.Color(255, 255, 255));
        jLblTopOfPrtsMin.setText("  -");
        jLblTopOfPrtsMin.setToolTipText("");
        jLblTopOfPrtsMin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLblTopOfPrtsMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLblTopOfPrtsMinMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLblTopOfPrtsMinMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLblTopOfPrtsMinMouseExited(evt);
            }
        });
        jPnlTopPartsAdd.add(jLblTopOfPrtsMin, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 0, 30, 30));

        jLblTopPartsAdd.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLblTopPartsAddMouseDragged(evt);
            }
        });
        jLblTopPartsAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLblTopPartsAddMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLblTopPartsAddMousePressed(evt);
            }
        });
        jPnlTopPartsAdd.add(jLblTopPartsAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1070, 30));

        jFrmAddParts.getContentPane().add(jPnlTopPartsAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1070, 30));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Repairs and services ");
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPnlTop.setBackground(new java.awt.Color(51, 51, 51));
        jPnlTop.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_minimizeScrv.setBackground(new java.awt.Color(153, 153, 153));
        jLabel_minimizeScrv.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel_minimizeScrv.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_minimizeScrv.setText("  -");
        jLabel_minimizeScrv.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jLabel_minimizeScrv.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel_minimizeScrv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_minimizeScrvMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_minimizeScrvMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_minimizeScrvMouseExited(evt);
            }
        });
        jPnlTop.add(jLabel_minimizeScrv, new org.netbeans.lib.awtextra.AbsoluteConstraints(1260, 0, 30, 30));

        jLabel_closeScrv.setBackground(new java.awt.Color(255, 0, 51));
        jLabel_closeScrv.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel_closeScrv.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_closeScrv.setText("  X");
        jLabel_closeScrv.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jLabel_closeScrv.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel_closeScrv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_closeScrvMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_closeScrvMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_closeScrvMouseExited(evt);
            }
        });
        jPnlTop.add(jLabel_closeScrv, new org.netbeans.lib.awtextra.AbsoluteConstraints(1290, 0, 30, 30));

        jLblTopScrv.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLblTopScrvMouseDragged(evt);
            }
        });
        jLblTopScrv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLblTopScrvMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLblTopScrvMousePressed(evt);
            }
        });
        jPnlTop.add(jLblTopScrv, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1320, 30));

        getContentPane().add(jPnlTop, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1320, -1));

        jPnlMain.setBackground(new java.awt.Color(0, 84, 140));
        jPnlMain.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTblServ.setBackground(new java.awt.Color(62, 62, 62));
        jTblServ.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jTblServ.setForeground(new java.awt.Color(255, 255, 255));
        jTblServ.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Type", "Desciption", "Car", "Client ", "Parts", "Price", "VAT", "Discount", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTblServ.getTableHeader().setReorderingAllowed(false);
        jTblServ.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTblServMouseClicked(evt);
            }
        });
        jTblServ.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTblServInputMethodTextChanged(evt);
            }
        });
        jTblServ.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTblServKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jTblServ);

        jPnlMain.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 70, 950, 470));

        jCmbBxSrchItems.setForeground(new java.awt.Color(255, 255, 255));
        jCmbBxSrchItems.setMaximumRowCount(6);
        jCmbBxSrchItems.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "TYPE", "CAR", "CLIENT", "PARTS", "REPAIRMAN" }));
        jPnlMain.add(jCmbBxSrchItems, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 380, 90, -1));

        jTxtFldSrch.setBackground(new java.awt.Color(62, 62, 62));
        jTxtFldSrch.setForeground(new java.awt.Color(255, 255, 255));
        jTxtFldSrch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTxtFldSrchKeyReleased(evt);
            }
        });
        jPnlMain.add(jTxtFldSrch, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 420, 250, 30));

        jCmbBxOrdrAscDsc.setForeground(new java.awt.Color(255, 255, 255));
        jCmbBxOrdrAscDsc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ASCENDING", "DESCENDING" }));
        jPnlMain.add(jCmbBxOrdrAscDsc, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 380, 100, -1));

        jLblSrchByItm.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLblSrchByItm.setForeground(new java.awt.Color(255, 255, 255));
        jLblSrchByItm.setText("Search by :");
        jPnlMain.add(jLblSrchByItm, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 380, 80, -1));

        jBtnHideTbl.setBackground(new java.awt.Color(0, 84, 140));
        jBtnHideTbl.setForeground(new java.awt.Color(255, 255, 255));
        jBtnHideTbl.setText("Clean");
        jBtnHideTbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnHideTblActionPerformed(evt);
            }
        });
        jPnlMain.add(jBtnHideTbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 550, 110, 40));

        jBtnAddPart.setBackground(new java.awt.Color(0, 84, 140));
        jBtnAddPart.setForeground(new java.awt.Color(255, 255, 255));
        jBtnAddPart.setText("Add parts");
        jBtnAddPart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAddPartActionPerformed(evt);
            }
        });
        jPnlMain.add(jBtnAddPart, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 510, 110, 40));

        jBtnAddClCar.setBackground(new java.awt.Color(0, 84, 140));
        jBtnAddClCar.setForeground(new java.awt.Color(255, 255, 255));
        jBtnAddClCar.setText("Add client car");
        jBtnAddClCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAddClCarActionPerformed(evt);
            }
        });
        jPnlMain.add(jBtnAddClCar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 510, 110, 40));

        jBtnAddToTbl.setBackground(new java.awt.Color(0, 84, 140));
        jBtnAddToTbl.setForeground(new java.awt.Color(255, 255, 255));
        jBtnAddToTbl.setText("ADD");
        jBtnAddToTbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAddToTblActionPerformed(evt);
            }
        });
        jPnlMain.add(jBtnAddToTbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 460, 110, 40));

        jBtnUpdateToTbl.setBackground(new java.awt.Color(0, 84, 140));
        jBtnUpdateToTbl.setForeground(new java.awt.Color(255, 255, 255));
        jBtnUpdateToTbl.setText("UPDATE");
        jBtnUpdateToTbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnUpdateToTblActionPerformed(evt);
            }
        });
        jPnlMain.add(jBtnUpdateToTbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 460, 90, 40));

        jBtnDeleteToTbl.setBackground(new java.awt.Color(0, 84, 140));
        jBtnDeleteToTbl.setForeground(new java.awt.Color(255, 255, 255));
        jBtnDeleteToTbl.setText("DELETE");
        jBtnDeleteToTbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDeleteToTblActionPerformed(evt);
            }
        });
        jPnlMain.add(jBtnDeleteToTbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 460, 100, 40));

        jLblCurrency.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLblCurrency.setForeground(new java.awt.Color(255, 255, 255));
        jLblCurrency.setText("BGN");
        jPnlMain.add(jLblCurrency, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 220, -1, 30));

        jLblPercVAT.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLblPercVAT.setForeground(new java.awt.Color(255, 255, 255));
        jLblPercVAT.setText("%");
        jPnlMain.add(jLblPercVAT, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 260, -1, 30));

        jLblTiemH.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLblTiemH.setForeground(new java.awt.Color(255, 255, 255));
        jLblTiemH.setText("Hours");
        jPnlMain.add(jLblTiemH, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 340, -1, 30));

        jLblTimeServ.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLblTimeServ.setForeground(new java.awt.Color(255, 255, 255));
        jLblTimeServ.setText("Time :");
        jPnlMain.add(jLblTimeServ, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, 80, -1));

        jTxtFldTime.setBackground(new java.awt.Color(62, 62, 62));
        jTxtFldTime.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTxtFldTime.setForeground(new java.awt.Color(255, 255, 255));
        jTxtFldTime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTxtFldTimeKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxtFldTimeKeyTyped(evt);
            }
        });
        jPnlMain.add(jTxtFldTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 340, 100, 30));

        jTxtFldDiscount.setBackground(new java.awt.Color(62, 62, 62));
        jTxtFldDiscount.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTxtFldDiscount.setForeground(new java.awt.Color(255, 255, 255));
        jTxtFldDiscount.setToolTipText("");
        jTxtFldDiscount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTxtFldDiscountKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxtFldDiscountKeyTyped(evt);
            }
        });
        jPnlMain.add(jTxtFldDiscount, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 300, 60, 30));

        jLblPercDiscount.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLblPercDiscount.setForeground(new java.awt.Color(255, 255, 255));
        jLblPercDiscount.setText("%");
        jPnlMain.add(jLblPercDiscount, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 300, -1, 30));

        jLblDiscServ.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLblDiscServ.setForeground(new java.awt.Color(255, 255, 255));
        jLblDiscServ.setText("Discount :");
        jPnlMain.add(jLblDiscServ, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, 100, -1));

        jLblTAXServ.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLblTAXServ.setForeground(new java.awt.Color(255, 255, 255));
        jLblTAXServ.setText("VAT :");
        jLblTAXServ.setToolTipText("");
        jPnlMain.add(jLblTAXServ, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, 80, -1));

        jTxtFldTax.setBackground(new java.awt.Color(62, 62, 62));
        jTxtFldTax.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTxtFldTax.setForeground(new java.awt.Color(255, 255, 255));
        jTxtFldTax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtFldTaxActionPerformed(evt);
            }
        });
        jTxtFldTax.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTxtFldTaxKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxtFldTaxKeyTyped(evt);
            }
        });
        jPnlMain.add(jTxtFldTax, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 260, 60, 30));

        jTxtFldPrice.setBackground(new java.awt.Color(62, 62, 62));
        jTxtFldPrice.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTxtFldPrice.setForeground(new java.awt.Color(255, 255, 255));
        jTxtFldPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTxtFldPriceKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxtFldPriceKeyTyped(evt);
            }
        });
        jPnlMain.add(jTxtFldPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 220, 100, 30));

        jLblPriceServ.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLblPriceServ.setForeground(new java.awt.Color(255, 255, 255));
        jLblPriceServ.setText("Price :");
        jPnlMain.add(jLblPriceServ, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, 80, -1));

        jTxtArDesc.setBackground(new java.awt.Color(62, 62, 62));
        jTxtArDesc.setColumns(20);
        jTxtArDesc.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTxtArDesc.setForeground(new java.awt.Color(255, 255, 255));
        jTxtArDesc.setRows(5);
        jTxtArDesc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTxtArDescKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxtArDescKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jTxtArDesc);

        jPnlMain.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 130, 180, 80));

        jCmbBxRepTyp.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jCmbBxRepTyp.setForeground(new java.awt.Color(255, 255, 255));
        jCmbBxRepTyp.setMaximumRowCount(7);
        jCmbBxRepTyp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Repair", "Maintenance", "Periodic maintenance", "Service", "Custom work", "Tuning", "Other" }));
        jCmbBxRepTyp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCmbBxRepTypActionPerformed(evt);
            }
        });
        jPnlMain.add(jCmbBxRepTyp, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 100, 180, -1));

        jTxtFldIDServ.setEditable(false);
        jTxtFldIDServ.setBackground(new java.awt.Color(153, 153, 153));
        jTxtFldIDServ.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTxtFldIDServ.setForeground(new java.awt.Color(255, 255, 255));
        jTxtFldIDServ.setFocusable(false);
        jTxtFldIDServ.setOpaque(false);
        jPnlMain.add(jTxtFldIDServ, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, 130, -1));

        jLblIDServ.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLblIDServ.setForeground(new java.awt.Color(255, 255, 255));
        jLblIDServ.setText("ID :");
        jPnlMain.add(jLblIDServ, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 80, -1));

        jLblTypeServ.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLblTypeServ.setForeground(new java.awt.Color(255, 255, 255));
        jLblTypeServ.setText("Type :");
        jPnlMain.add(jLblTypeServ, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, 80, -1));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Description :");
        jPnlMain.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, -1, -1));

        jPnlPaging.setBackground(new java.awt.Color(62, 62, 62));
        jPnlPaging.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonLast.setBackground(new java.awt.Color(0, 84, 140));
        jButtonLast.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButtonLast.setForeground(new java.awt.Color(255, 255, 255));
        jButtonLast.setText("Last");
        jButtonLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLastActionPerformed(evt);
            }
        });
        jPnlPaging.add(jButtonLast, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 0, 90, -1));

        jButtonNext.setBackground(new java.awt.Color(0, 84, 140));
        jButtonNext.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButtonNext.setForeground(new java.awt.Color(255, 255, 255));
        jButtonNext.setText("Next");
        jButtonNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNextActionPerformed(evt);
            }
        });
        jPnlPaging.add(jButtonNext, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 0, 70, -1));

        jComboBoxPage.setBackground(new java.awt.Color(62, 62, 62));
        jComboBoxPage.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jComboBoxPage.setForeground(new java.awt.Color(255, 255, 255));
        jPnlPaging.add(jComboBoxPage, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 0, 80, 30));

        jButtonPrevious.setBackground(new java.awt.Color(0, 84, 140));
        jButtonPrevious.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButtonPrevious.setForeground(new java.awt.Color(255, 255, 255));
        jButtonPrevious.setText("Previous");
        jButtonPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPreviousActionPerformed(evt);
            }
        });
        jPnlPaging.add(jButtonPrevious, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 0, -1, -1));

        jButtonFirst.setBackground(new java.awt.Color(0, 84, 140));
        jButtonFirst.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButtonFirst.setForeground(new java.awt.Color(255, 255, 255));
        jButtonFirst.setText("First");
        jButtonFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFirstActionPerformed(evt);
            }
        });
        jPnlPaging.add(jButtonFirst, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 0, 90, -1));

        jLabelStatusHalaman.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabelStatusHalaman.setForeground(new java.awt.Color(255, 255, 255));
        jPnlPaging.add(jLabelStatusHalaman, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 170, 40));

        jLabelTotalData.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabelTotalData.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTotalData.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jPnlPaging.add(jLabelTotalData, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 0, 150, 40));

        jPnlMain.add(jPnlPaging, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 540, 950, 40));

        jLblPicMain.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/SERV.png"))); // NOI18N
        jPnlMain.add(jLblPicMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 1300, 570));

        getContentPane().add(jPnlMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1320, 620));

        setSize(new java.awt.Dimension(1320, 652));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jCmbBxRepTypActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmbBxRepTypActionPerformed


    }//GEN-LAST:event_jCmbBxRepTypActionPerformed

    private void jLabel_minimizeScrvMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_minimizeScrvMouseClicked
//Minimizes the form
        this.setState(JFrame_Add_Product.ICONIFIED);
    }//GEN-LAST:event_jLabel_minimizeScrvMouseClicked

    private void jLabel_minimizeScrvMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_minimizeScrvMouseEntered
        //Minimize mouse entered
        Border label_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.gray);
        jLabel_minimizeScrv.setBorder(label_border);
        jLabel_minimizeScrv.setForeground(Color.gray);
        jLabel_minimizeScrv.setOpaque(true);
        jLabel_closeScrv.setBackground(new Color(153, 153, 153));
    }//GEN-LAST:event_jLabel_minimizeScrvMouseEntered

    private void jLabel_minimizeScrvMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_minimizeScrvMouseExited
        // Minimize client management window mouse exited
        Border label_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.white);
        jLabel_minimizeScrv.setBorder(label_border);
        jLabel_minimizeScrv.setForeground(Color.white);
        jLabel_minimizeScrv.setOpaque(false);
    }//GEN-LAST:event_jLabel_minimizeScrvMouseExited

    private void jLabel_closeScrvMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_closeScrvMouseClicked
//On exit disposes of the form
        this.dispose();
    }//GEN-LAST:event_jLabel_closeScrvMouseClicked

    private void jLabel_closeScrvMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_closeScrvMouseEntered
        //Label close mouse entered new color
        Border label_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.gray);
        jLabel_closeScrv.setBorder(label_border);
        jLabel_closeScrv.setForeground(Color.gray);
        jLabel_closeScrv.setOpaque(true);
        jLabel_closeScrv.setBackground(Color.RED);
    }//GEN-LAST:event_jLabel_closeScrvMouseEntered

    private void jLabel_closeScrvMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_closeScrvMouseExited
        //Label close mouse exited reset defaut color
        Border label_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.white);
        jLabel_closeScrv.setBorder(label_border);
        jLabel_closeScrv.setForeground(Color.white);
        jLabel_closeScrv.setOpaque(false);
    }//GEN-LAST:event_jLabel_closeScrvMouseExited

    private void jLblTopScrvMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLblTopScrvMouseDragged
        //Top panel drag feaature
        int coordX = evt.getXOnScreen();
        int coordY = evt.getYOnScreen();
        this.setLocation(coordX - xMouse, coordY - yMouse);
    }//GEN-LAST:event_jLblTopScrvMouseDragged

    private void jLblTopScrvMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLblTopScrvMouseClicked
        // 2 Clicks centr Form
        if (evt.getButton() == MouseEvent.BUTTON1 && evt.getClickCount() == 2) {
            //System.out.println("double clicked");
            this.setLocationRelativeTo(null);
        }
    }//GEN-LAST:event_jLblTopScrvMouseClicked

    private void jLblTopScrvMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLblTopScrvMousePressed
        //Gets mouse cusrsor x adn y coordiantes on the dispaly
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_jLblTopScrvMousePressed

    private void jTblServMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblServMouseClicked
        //Set text from jtable to textfields on clidked row from jtable
        showSrvcsToFields();
    }//GEN-LAST:event_jTblServMouseClicked

    private void jTblCarAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblCarAddMouseClicked
        //Table cars add
        TableModel model = jTblCarAdd.getModel();//Gets table model for table car add
        int i = jTblCarAdd.getSelectedRow();//GETS SELECTED ROWS INDEX
        jTxtFldRegNCA.setText(model.getValueAt(i, 0).toString());//Sets text in reg number textfield 
    }//GEN-LAST:event_jTblCarAddMouseClicked

    private void jTblCarAddKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTblCarAddKeyReleased
        //On arrow key up or down press event
        //Gets table model for add cars
        TableModel model = jTblCarAdd.getModel();
        //On arrow key up or down
        if (evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            //Gets tables index at selected row
            int i = jTblCarAdd.getSelectedRow();
            //Sets textfield for car reg numbers
            jTxtFldRegNCA.setText(model.getValueAt(i, 0).toString());
    }//GEN-LAST:event_jTblCarAddKeyReleased
    }
    private void jBtnChoseClActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnChoseClActionPerformed
//Button for addding car to selected client
//Gets table model
        DefaultTableModel model = (DefaultTableModel) jTblCarAdd.getModel();
//Clears rows by setting them to zero
        model.setRowCount(0);

        if (!jTxtFldCLid.getText().equals("")) {//checks if  
            jPnlTablCl.setVisible(false);
            jBtnChoseCl.setVisible(false);
            jPnlTablCars.setVisible(true);
            jPnlChoseCar.setVisible(true);
            jPnlSearchby.setVisible(false);
//Populates table
            Show_Users_In_JTableCars();

            ArrayList<Cars_Db_clients> list = null;
            list = new ArrayList<Cars_Db_clients>();
            try {

                String qry = "SELECT * FROM `clients_cars_record` WHERE  `cl_Owner_car` LIKE '" + jTxtFldCLid.getText() + "' ORDER BY `cl_Owner_car` DESC ";
                Statement st = connct.createStatement();
                ResultSet rs = st.executeQuery(qry);
                Cars_Db_clients cars_Db_clients;
                while (rs.next()) {
                    cars_Db_clients = new Cars_Db_clients(rs.getString("Car_Reg_Num_cl"), rs.getString("Car_Vin_Num_cl"),
                            rs.getString("Car_Make_cl"), rs.getString("Car_Model_cl"), rs.getString("Car_Mileage_cl"),
                            rs.getString("Car_VehicleType_cl"), rs.getString("Car_FuelSys_cl"), rs.getString("Car_Gearbox_cl"),
                            rs.getString("Car_ManufactureDate_cl"), rs.getString("Car_Drivetrain_cl"),
                            rs.getString("Car_EngineDisplacementl_cl"), rs.getString("Car_Power_cl"), rs.getString("Car_DateTime_Created_cl"));
                    list.add(cars_Db_clients);
                }

                model.setRowCount(0); // Empty/clear the table

                Object[] row = new Object[11];
                for (int i = 0; i < list.size(); i++) {
                    row[0] = list.get(i).getregNum();
                    row[1] = list.get(i).getVIN();
                    row[2] = list.get(i).getMake();
                    row[3] = list.get(i).getModel();
                    row[4] = list.get(i).getMileage();
                    row[5] = list.get(i).getType();
                    row[6] = list.get(i).getFueling();
                    row[7] = list.get(i).getGearbox();
                    row[8] = list.get(i).getDrivtrn();
                    row[9] = list.get(i).getCC();
                    row[10] = list.get(i).getKW();
                    model.addRow(row);
                }
            } catch (Exception e) {
                System.out.println(e);
            }
        } else {
            JOptionPane.showMessageDialog(this, " Select client from the table ", " No Data selected! ", 2);
        }
    }//GEN-LAST:event_jBtnChoseClActionPerformed

    private void jBtnAddCarToServiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAddCarToServiceActionPerformed
//
        if (!jTxtFldRegNCA.equals("")) {
            try {

                String qry = null;
                PreparedStatement ps = null;

                qry = "UPDATE `repairs_maintenance` SET `car_id` =?, `client_id` =? WHERE `repairs_maintenance`.`id` =? ";
                ps = connct.prepareStatement(qry);
                ps.setString(1, jTxtFldRegNCA.getText());
                ps.setString(2, jTxtFldCLid.getText() + "  " + jTxtFldCLName.getText());
                ps.setString(3, jTxtFldIDServ.getText());
                int res = ps.executeUpdate();

                initPagination();

                if (res >= 1) {
                    JOptionPane.showMessageDialog(null, res + " Part"
                            + " Updated into database .... ");

                    jFrmAddCarClient.dispose();
                } else {
                    JOptionPane.showMessageDialog(null, " Parts Updae Failed .... ");

                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            } finally {

                jTxtFldCLid.setText("");
                jTxtFldCLName.setText("");
                jTxtFldRegNCA.setText("");
            }

        } else {
            JOptionPane.showMessageDialog(this, " Select car from the table ! ", " No Data selected! ", 2);
        }

    }//GEN-LAST:event_jBtnAddCarToServiceActionPerformed

    private void jBtnAddClCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAddClCarActionPerformed
        //Button for adding Client's car to the repair 
        if (!jTxtFldIDServ.getText().equals("")) {//Validates if repair is chosen

            jPnlChoseCar.setVisible(false);
            jPnlTablCl.setVisible(true);
            jBtnChoseCl.setVisible(true);
            jPnlTablCars.setVisible(false);
            jFrmAddCarClient.setVisible(true);
            jFrmAddCarClient.setTitle(" Chose Client's car ");
            jFrmAddCarClient.setResizable(false);
            jFrmAddCarClient.setSize(1071, 601);
            jFrmAddCarClient.setLocationRelativeTo(null);
            jFrmAddCarClient.setBackground(new Color(0, 0, 0, 0));
            jPnlTablCl.setBackground(new Color(0, 0, 0, 0));
            jPnlTablCars.setBackground(new Color(0, 0, 0, 0));
            jPnlChoseClient.setBackground(new Color(0, 0, 0, 0));
            jPnlChoseCar.setBackground(new Color(0, 0, 0, 0));
            jPnlSearchby.setBackground(new Color(0, 0, 0, 0));

            ArrayList<User> al = null;
            al = new ArrayList<User>();
            try {

                String qry = "SELECT * FROM `clientdetails` WHERE `client_owns_car` LIKE 'YES' ";
                Statement st = connct.createStatement();
                ResultSet rs = st.executeQuery(qry);
                User student;
                while (rs.next()) {
                    student = new User(rs.getInt("id"),
                            rs.getString("fname"), rs.getString("lname"),
                            rs.getString("Phn_Num"), rs.getString("alt_Phn_Num"),
                            rs.getString("clients_email"), rs.getString("clients_second_email"),
                            rs.getString("dateTime_Cl_created"), rs.getString("client_Mod_count"),
                            rs.getString("clients_Date_T_LastTModified"));
                    al.add(student);
                }
                DefaultTableModel model = (DefaultTableModel) jTblChoseClient.getModel();
                model.setRowCount(0);
                Object[] row = new Object[4];
                for (int i = 0; i < al.size(); i++) {
                    row[0] = al.get(i).getId();
                    row[1] = al.get(i).getFirstName();
                    row[2] = al.get(i).getLastNAme();
                    row[3] = al.get(i).getAge();

                    model.addRow(row);
                }
            } catch (Exception e) {
                System.out.println(e);
            }

        } else {//Validates if repair is chosen 
            //if no repair is chosen
            JOptionPane.showMessageDialog(this, "Chose Service from thr table !", "No Repair Work chosen ! ", 2);
        }
    }//GEN-LAST:event_jBtnAddClCarActionPerformed

    private void jLabel_minAddCCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_minAddCCMouseClicked
//Minimize the form
        jFrmAddCarClient.setState(JFrame_Add_Product.ICONIFIED);
    }//GEN-LAST:event_jLabel_minAddCCMouseClicked

    private void jLabel_minAddCCMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_minAddCCMouseEntered
        //Minimize mouse entered
        Border label_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.gray);
        jLabel_minAddCC.setBorder(label_border);
        jLabel_minAddCC.setForeground(Color.gray);
        jLabel_minAddCC.setOpaque(true);
        jLabel_minAddCC.setBackground(new Color(153, 153, 153));
    }//GEN-LAST:event_jLabel_minAddCCMouseEntered

    private void jLabel_minAddCCMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_minAddCCMouseExited
        // Minimize client management window mouse exited
        Border label_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.white);
        jLabel_minAddCC.setBorder(label_border);
        jLabel_minAddCC.setForeground(Color.white);
        jLabel_minAddCC.setOpaque(false);
    }//GEN-LAST:event_jLabel_minAddCCMouseExited

    private void jLblTopCloseCarCLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLblTopCloseCarCLMouseClicked
//Close the form 
        jFrmAddCarClient.dispose();
    }//GEN-LAST:event_jLblTopCloseCarCLMouseClicked

    private void jLblTopCloseCarCLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLblTopCloseCarCLMouseEntered
//
        Border label_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.gray);
        jLblTopCloseCarCL.setBorder(label_border);
        jLblTopCloseCarCL.setForeground(Color.gray);
        jLblTopCloseCarCL.setOpaque(true);
        jLblTopCloseCarCL.setBackground(Color.RED);
    }//GEN-LAST:event_jLblTopCloseCarCLMouseEntered

    private void jLblTopCloseCarCLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLblTopCloseCarCLMouseExited
//
        Border label_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.white);
        jLblTopCloseCarCL.setBorder(label_border);
        jLblTopCloseCarCL.setForeground(Color.white);
        jLblTopCloseCarCL.setOpaque(false);
    }//GEN-LAST:event_jLblTopCloseCarCLMouseExited

    private void jLblTopAddCarCLMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLblTopAddCarCLMouseDragged
//
        int coordX = evt.getXOnScreen();
        int coordY = evt.getYOnScreen();
        jFrmAddCarClient.setLocation(coordX - xMouse, coordY - yMouse);
    }//GEN-LAST:event_jLblTopAddCarCLMouseDragged

    private void jLblTopAddCarCLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLblTopAddCarCLMouseClicked
        // 2 Clicks centr Form
        if (evt.getButton() == MouseEvent.BUTTON1 && evt.getClickCount() == 2) {
            //System.out.println("double clicked");
            jFrmAddCarClient.setLocationRelativeTo(null);
        }
    }//GEN-LAST:event_jLblTopAddCarCLMouseClicked

    private void jLblTopAddCarCLMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLblTopAddCarCLMousePressed
//Gets mouse cursor coordinate for x adn y
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_jLblTopAddCarCLMousePressed

    private void jBtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnBackActionPerformed
        //Back to main car client chose
        jFrmAddCarClient.dispose();
    }//GEN-LAST:event_jBtnBackActionPerformed

    private void jBtnAddToTblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAddToTblActionPerformed
        // Add Repair/Meintanavce

        if (verifyEptyFields()) {//Validate that the dields are not empty

            try {
                PreparedStatement ps = connct.prepareStatement("INSERT INTO `repairs_maintenance` ( `worker`,`type`, `description`,  `timestamp`, `price`, `vat`, `discount`, `time`) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?)");
                ps.setString(1, LogInAs.empName);//description
                ps.setString(2, jCmbBxRepTyp.getSelectedItem().toString());//type
                ps.setString(3, jTxtArDesc.getText());//description
                DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
                LocalDateTime now = LocalDateTime.now();
                ps.setString(4, dtf.format(now).toString());//timestamp
                ps.setString(5, jTxtFldPrice.getText());//price
                ps.setString(6, jTxtFldTax.getText());//vat
                ps.setString(7, jTxtFldDiscount.getText());//discount
                ps.setString(8, jTxtFldTime.getText());//timeff

                int res = ps.executeUpdate();//Executes the update 

                initPagination();//Updates table

                if (res >= 1) {//succes
                    clear();
                    JOptionPane.showMessageDialog(null, res + " Number of Parts "
                            + " inserted into database ..... ");
                } else {//fail
                    JOptionPane.showMessageDialog(null, " New Part  Data entry  Failed ... ! ");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            } finally {
                //Clears textfields
                clear();
            }
        }

    }//GEN-LAST:event_jBtnAddToTblActionPerformed

    private void jTblServKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTblServKeyReleased
        //On key press events
        //On arrow keys up or down
        if (evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            //Sets seleted rows info from tabel to coresponding textfields
            showSrvcsToFields();
        }
        //Delete operation
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {//On Delete key pressed

            if (verifyEptyFields()) {//Validates thet textfields are not empty
                int result;
                result = JOptionPane.showConfirmDialog(this, "Are you sure you really want to delete service with id number  " + jTxtFldIDServ.getText(),
                        " Delete operation ! ", 1);
                System.out.println(result);
                // yes -> 0
                // no ->  1
                // cancel  -> 2
                if (result == 0) {//Checks witch option is selected from the dialog window
                    // If Yes is selected
                    try {
                        String dell;
                        dell = JOptionPane.showInputDialog(this, "Type DELETE if you want to erase the record : ", "");
                        if ("DELETE".equals(dell) && jTxtFldIDServ.getText().trim() != "".trim()) { // check if input is null

                            String del = jTxtFldIDServ.getText();
                            //SQL Query
                            String query = "DELETE FROM `repairs_maintenance` WHERE `repairs_maintenance`.`id` = '" + del + "' LIMIT 1";
                            executeSQlQuery(query, "Deleted");//method for query

                            initPagination();//Refreshes the jtable

                        } else {// no input oem check if empty 
                            JOptionPane.showMessageDialog(null, " This service number Not deleted !   ", " Deletion  ", 2);
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(JFrame_Repairs_Maintenance.class.getName()).log(Level.SEVERE, null, ex);
                    } finally {
                        clear();//Clears textfields afther deletion
                    }
                }//Checks witch option is selected from the dialog window
            }//Validates thet textfields are not empty
        }//On Delete key pressed         
    }//GEN-LAST:event_jTblServKeyReleased

    private void jTblChoseClientKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTblChoseClientKeyReleased
        //On key press events
        //On arrow keys up or down
        if (evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            //Sets seleted rows info from tabel to coresponding textfields
            showClientsToTblCl();
        }
    }//GEN-LAST:event_jTblChoseClientKeyReleased

    private void jTblChoseClientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblChoseClientMouseClicked
        //Sets seleted rows info from tabel to coresponding textfields on row mouse click
        showClientsToTblCl();
    }//GEN-LAST:event_jTblChoseClientMouseClicked

    private void jBtnHideTblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnHideTblActionPerformed
        //Clears textfields
        clear();

    }//GEN-LAST:event_jBtnHideTblActionPerformed

    private void jLblTopOfPrtsCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLblTopOfPrtsCloseMouseClicked
        //Close form for chosing parts
        jFrmAddParts.dispose();
    }//GEN-LAST:event_jLblTopOfPrtsCloseMouseClicked

    private void jLblTopOfPrtsCloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLblTopOfPrtsCloseMouseEntered
        // Top exit entered mouse
        Border label_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.gray);
        jLblTopOfPrtsClose.setBorder(label_border);
        jLblTopOfPrtsClose.setForeground(Color.gray);
        jLblTopOfPrtsClose.setOpaque(true);
        jLblTopOfPrtsClose.setBackground(Color.RED);
    }//GEN-LAST:event_jLblTopOfPrtsCloseMouseEntered

    private void jLblTopOfPrtsCloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLblTopOfPrtsCloseMouseExited
        // Top exit exited mouse
        Border label_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.white);
        jLblTopOfPrtsClose.setBorder(label_border);
        jLblTopOfPrtsClose.setForeground(Color.white);
        jLblTopOfPrtsClose.setOpaque(false);
    }//GEN-LAST:event_jLblTopOfPrtsCloseMouseExited

    private void jLblTopOfPrtsMinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLblTopOfPrtsMinMouseClicked
        //Minimize
        jFrmAddParts.setState(JFrameClientManagement.ICONIFIED);
    }//GEN-LAST:event_jLblTopOfPrtsMinMouseClicked

    private void jLblTopOfPrtsMinMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLblTopOfPrtsMinMouseEntered
        // Top min entered mouse
        Border label_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.GRAY);
        jLblTopOfPrtsMin.setBorder(label_border);
        jLblTopOfPrtsMin.setForeground(Color.GRAY);
        jLblTopOfPrtsMin.setOpaque(true);
    }//GEN-LAST:event_jLblTopOfPrtsMinMouseEntered

    private void jLblTopOfPrtsMinMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLblTopOfPrtsMinMouseExited
        // Top min entered exited
        Border label_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.white);
        jLblTopOfPrtsMin.setBorder(label_border);
        jLblTopOfPrtsMin.setForeground(Color.white);
        jLblTopOfPrtsMin.setOpaque(false);
    }//GEN-LAST:event_jLblTopOfPrtsMinMouseExited

    private void jLblTopPartsAddMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLblTopPartsAddMouseDragged
        // Window drag feature
        int coordX = evt.getXOnScreen();
        int coordY = evt.getYOnScreen();
        jFrmAddParts.setLocation(coordX - xMouse, coordY - yMouse);
    }//GEN-LAST:event_jLblTopPartsAddMouseDragged

    private void jLblTopPartsAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLblTopPartsAddMouseClicked
        // 2 Clicks centr  car chk Form
        if (evt.getButton() == MouseEvent.BUTTON1 && evt.getClickCount() == 2) {
            //System.out.println("double clicked");
            jFrmAddParts.setLocationRelativeTo(null);
        }
    }//GEN-LAST:event_jLblTopPartsAddMouseClicked

    private void jLblTopPartsAddMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLblTopPartsAddMousePressed
        // Window drag feature on click
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_jLblTopPartsAddMousePressed

    private void jBtnAddPartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAddPartActionPerformed
        // Chose parts
        if (!jTxtFldIDServ.getText().equals("")) {
            jFrmAddParts.setVisible(true);
            jFrmAddParts.setTitle(" Chose parts ");
            jFrmAddParts.setResizable(false);
            jFrmAddParts.setSize(1071, 601);
            jFrmAddParts.setLocationRelativeTo(null);
            jFrmAddParts.setBackground(new Color(0, 0, 0, 0));
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);
            Show_PatrsCList_In_JTable();

        } else {
            JOptionPane.showMessageDialog(this, "Chose Service from thr table !", "No Repair Work chosen ! ", 2);
        }
    }//GEN-LAST:event_jBtnAddPartActionPerformed

    private void jTxtFldSrchCLKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtFldSrchCLKeyReleased
        //Search Client by

        //Search by order
        int b = jCmbBoxSrchorder.getSelectedIndex();
        String sort = "ASC";

        switch (b) {//switch for search combobox states for search by 
            case 0:
                sort = "ASC";//Ascending order
                break;
            case 1:
                sort = "DESC";//Descenfing
                break;

            default:
                sort = "ASC";//Defaut state ascending search by order
                break;
        }

        //Search by item
        String test = "";
        int a = jCmbBoxSrchCL.getSelectedIndex();
        switch (a) {//switch for search combobox states
            case 0:
                test = "id";
                break;
            case 1:
                test = "fname";
                break;
            case 2:
                test = "lname";
                break;
            case 3:
                test = "Phn_Num";
                break;
            default:
                test = "id";
                break;
        }
        ArrayList<User> al = null;
        al = new ArrayList<User>();
        String val = jTxtFldSrchCL.getText().toString();
        try {

            String qry = "SELECT * FROM clientdetails WHERE " + test + " LIKE '%" + val + "%'  ORDER BY " + test + " " + sort + " ";
            Statement st = connct.createStatement();
            ResultSet rs = st.executeQuery(qry);
            User student;
            while (rs.next()) {
                student = new User(rs.getInt("id"),
                        rs.getString("fname"), rs.getString("lname"),
                        rs.getString("Phn_Num"), rs.getString("alt_Phn_Num"),
                        rs.getString("clients_email"), rs.getString("clients_second_email"),
                        rs.getString("dateTime_Cl_created"), rs.getString("client_Mod_count"),
                        rs.getString("clients_Date_T_LastTModified"));
                al.add(student);
            }
            DefaultTableModel model = (DefaultTableModel) jTblChoseClient.getModel();
            model.setRowCount(0); // Empty/clear the table
            Object[] row = new Object[4];
            for (int i = 0; i < al.size(); i++) {
                row[0] = al.get(i).getId();
                row[1] = al.get(i).getFirstName();
                row[2] = al.get(i).getLastNAme();
                row[3] = al.get(i).getAge();
                model.addRow(row);
            }
        } catch (Exception e) {
            System.out.println(e);
        }


    }//GEN-LAST:event_jTxtFldSrchCLKeyReleased

    private void jTxtFldSrchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtFldSrchKeyReleased
        //Search in SQL DB on every keypress
        search();
    }//GEN-LAST:event_jTxtFldSrchKeyReleased

    private void jBtnUpdateToTblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnUpdateToTblActionPerformed
//Button Update
        if (jTxtFldIDServ.getText().trim() != "".trim()) {//Validates if there is car registration number selected
            int result;
            result = JOptionPane.showConfirmDialog(this, "Are you sure you really want to Update service with id number  " + jTxtFldIDServ.getText(),
                    " Update operation ! ", 1);
            System.out.println(result);
            // yes -> 0
            // no ->  1
            // cancel  -> 2
            if (result == 0) {

                if (verifyEptyFields()) {//Validates if the fields are not empty
                    try {

                        PreparedStatement ps = null;

                        ps = connct.prepareStatement("UPDATE `repairs_maintenance` SET"
                                + "`type` =?,`description` = ? ,  `price` =?,"
                                + "`vat`=?,`discount`=?,`time`=?,"
                                + "`lastupdateDate`=? WHERE `repairs_maintenance`.`id`=? LIMIT 1");

                        ps.setString(1, jCmbBxRepTyp.getSelectedItem().toString());//TYPE
                        ps.setString(2, jTxtArDesc.getText());//description
                        ps.setString(3, jTxtFldPrice.getText());//price
                        ps.setString(4, jTxtFldTax.getText());//vat
                        ps.setString(5, jTxtFldDiscount.getText());//discount
                        ps.setString(6, jTxtFldTime.getText());//time
                        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
                        LocalDateTime now = LocalDateTime.now();
                        ps.setString(7, dtf.format(now).toString());//lastupdateDate
                        ps.setString(8, jTxtFldIDServ.getText());//id
                        int res = ps.executeUpdate();

                        initPagination();//Refresh table rows

                    } catch (SQLException ex) {
                        Logger.getLogger(JFrameClientCars.class.getName()).log(Level.SEVERE, null, ex);
                    } finally {
                        clear();//Clears textfields
                    }

                }//Validates if the fields are not empty

            } else {//if res !=0
                JOptionPane.showMessageDialog(null, " Service Updae canceled ... ");
            }
        }//Validates if there is car registration number selected
    }//GEN-LAST:event_jBtnUpdateToTblActionPerformed

    private void jBtnDeleteToTblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDeleteToTblActionPerformed
//Button Delete

        if (verifyEptyFields()) {//Validates thet textfields are not empty

            int result;
            result = JOptionPane.showConfirmDialog(this, "Are you sure you really want to delete service with id number  " + jTxtFldIDServ.getText(),
                    " Delete operation ! ", 1);
            System.out.println(result);
            // yes -> 0
            // no ->  1
            // cancel  -> 2
            if (result == 0) {//Checks witch option is selected from the dialog window
                // If Yes is selected
                try {
                    String dell;
                    dell = JOptionPane.showInputDialog(this, "Type DELETE if you want to erase the record : ", "");
                    if ("DELETE".equals(dell) && jTxtFldIDServ.getText().trim() != "".trim()) { // check if input is null

                        String del = jTxtFldIDServ.getText();
                        //SQL Query
                        String query = "DELETE FROM `repairs_maintenance` WHERE `repairs_maintenance`.`id` = '" + del + "' LIMIT 1";
                        executeSQlQuery(query, "Deleted");//method for query

                        initPagination();//Refreshes the jtable

                    } else {// no input oem check if empty 
                        JOptionPane.showMessageDialog(null, " This service number Not deleted !   ", " Deletion  ", 2);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(JFrame_Repairs_Maintenance.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    clear();//Clears textfields afther deletion
                }

            }//Checks witch option is selected from the dialog window
        }//Validates thet textfields are not empty
    }//GEN-LAST:event_jBtnDeleteToTblActionPerformed

    private void jBtnAddOEMpARTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAddOEMpARTActionPerformed
//Add part from the existing parts catalog in  the SQL DB
        try {

            String qry = null;
            PreparedStatement ps = null;

            qry = "UPDATE `repairs_maintenance` SET `part_oem` =? WHERE `repairs_maintenance`.`id` =? ";
            ps = connct.prepareStatement(qry);
            ps.setString(1, jTxtFldOEMadd.getText());
            ps.setString(2, jTxtFldIDServ.getText());
            int res = ps.executeUpdate();

            initPagination();//Updates jatable

            if (res >= 1) {//Checks if updatated 
                JOptionPane.showMessageDialog(null, res + " Part"
                        + " Updated into database .... ");

                jFrmAddParts.dispose();//Closes the form for adding parts afhter succesfull add
            } else {
                JOptionPane.showMessageDialog(null, " Parts Updae Failed .... ");

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            jTxtFldOEMadd.setText("");//Clears 
        }
    }//GEN-LAST:event_jBtnAddOEMpARTActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
//Parts show in textfield

//Gets table model 
        TableModel model = jTable1.getModel();
//Gets the index at the selected row form the table
        int index = jTable1.getSelectedRow();
//Sets the text from the selected index to the label 
        jTxtFldOEMadd.setText(model.getValueAt(index, 0).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTxtFldSrchBycarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtFldSrchBycarKeyReleased
        //Search for car 

//Search by order
        int b = jCmbBoxSrchOrderCar.getSelectedIndex();
        String sort = "";
        switch (b) {//Switchwes search by 
            case 0:
                sort = "ASC";//Ascending order
                break;
            case 1:
                sort = "DESC";//Descending order
                break;

            default://Defaut  search order
                sort = "ASC";//Ascending order
                break;
        }

//Search by item
        String test = "";
        int a = jCmbBoxSrchItemCar.getSelectedIndex();
        switch (a) {//switch for search combobox states
            case 0:
                test = "Car_Vin_Num_cl";//        VIN
                break;
            case 1:
                test = "Car_Reg_Num_cl";//Reg Number
                break;
            case 2:
                test = "Car_Make_cl";//Make
                break;
            case 3:
                test = "Car_Model_cl";//Model
                break;
            case 4:
                test = "Car_VehicleType_cl";//Type
                break;
            case 5:
                test = "Car_FuelSys_cl";//Fueling
                break;
            case 6:
                test = "Car_Gearbox_cl";//Gearbox
                break;
            case 7:
                test = "Car_EngineDisplacementl_cl";//Engine cc
                break;
            case 8:
                test = "Car_Power_cl";//Power
                break;
            default:
                test = "Car_Vin_Num_cl";//Defaut state 
                break;
        }

        ArrayList<Cars_Db_clients> list = null;
        list = new ArrayList<Cars_Db_clients>();
        String val = jTxtFldSrchBycar.getText().toString();//Gets text for  teh search
        try {
            String qry = "SELECT * FROM `clients_cars_record` WHERE `cl_Owner_car` LIKE '" + jTxtFldCLid.getText() + "' AND " + test + " LIKE '%" + val + "%' ORDER BY " + test + " " + sort + "";
            Statement st = connct.createStatement();
            ResultSet rs = st.executeQuery(qry);
            Cars_Db_clients cars_Db_clients;
            while (rs.next()) {
                cars_Db_clients = new Cars_Db_clients(rs.getString("Car_Reg_Num_cl"), rs.getString("Car_Vin_Num_cl"),
                        rs.getString("Car_Make_cl"), rs.getString("Car_Model_cl"), rs.getString("Car_Mileage_cl"),
                        rs.getString("Car_VehicleType_cl"), rs.getString("Car_FuelSys_cl"), rs.getString("Car_Gearbox_cl"),
                        rs.getString("Car_ManufactureDate_cl"), rs.getString("Car_Drivetrain_cl"),
                        rs.getString("Car_EngineDisplacementl_cl"), rs.getString("Car_Power_cl"), rs.getString("Car_DateTime_Created_cl"));
                list.add(cars_Db_clients);
            }

            DefaultTableModel model = (DefaultTableModel) jTblCarAdd.getModel();
            model.setRowCount(0); // Empty/clear the table
            Object[] row = new Object[11];
            for (int i = 0; i < list.size(); i++) {
                row[0] = list.get(i).getregNum();
                row[1] = list.get(i).getVIN();
                row[2] = list.get(i).getMake();
                row[3] = list.get(i).getModel();
                row[4] = list.get(i).getMileage();
                row[5] = list.get(i).getType();
                row[6] = list.get(i).getFueling();
                row[7] = list.get(i).getGearbox();
                row[8] = list.get(i).getDrivtrn();
                row[9] = list.get(i).getCC();
                row[10] = list.get(i).getKW();
                //Adds rows 
                model.addRow(row);
            }
        } catch (Exception e) {
            System.out.println(e);
        }


    }//GEN-LAST:event_jTxtFldSrchBycarKeyReleased

    private void jTxtFldOEMaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtFldOEMaddActionPerformed

    }//GEN-LAST:event_jTxtFldOEMaddActionPerformed

    private void jTxtFldPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtFldPriceKeyReleased


    }//GEN-LAST:event_jTxtFldPriceKeyReleased

    private void jTxtFldTaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtFldTaxActionPerformed


    }//GEN-LAST:event_jTxtFldTaxActionPerformed

    private void jTxtFldTaxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtFldTaxKeyReleased
//Filter for 100 %
        String str = jTxtFldTax.getText();
        if (!"".trim().equals(str)){
        int num = Integer.parseInt(str.trim());
        if (num > 100) {
          jTxtFldTax.setText("100");
        } 
        }
    }//GEN-LAST:event_jTxtFldTaxKeyReleased

    private void jTxtFldDiscountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtFldDiscountKeyReleased
//Filter for 100 %
        String str = jTxtFldDiscount.getText();
        if (!"".trim().equals(str)){
        int num = Integer.parseInt(str.trim());
        if (num > 100) {
          jTxtFldDiscount.setText("100");
        } 
        }
    }//GEN-LAST:event_jTxtFldDiscountKeyReleased

    private void jTxtArDescKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtArDescKeyReleased


    }//GEN-LAST:event_jTxtArDescKeyReleased

    private void jTxtFldTimeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtFldTimeKeyReleased


    }//GEN-LAST:event_jTxtFldTimeKeyReleased

    private void jTxtFldPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtFldPriceKeyTyped
//Filter
        if (!Character.isDigit(evt.getKeyChar()) || (jTxtFldPrice.getText() + evt.getKeyChar()).length() > 32) {
            evt.consume();
        }

    }//GEN-LAST:event_jTxtFldPriceKeyTyped

    private void jTxtArDescKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtArDescKeyTyped
//Filter
        if ((jTxtArDesc.getText() + evt.getKeyChar()).length() > 128) {
            evt.consume();
        }
    }//GEN-LAST:event_jTxtArDescKeyTyped

    private void jTxtFldTaxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtFldTaxKeyTyped
//Filter
        if (!Character.isDigit(evt.getKeyChar())  || (jTxtFldTax.getText() + evt.getKeyChar()).length() > 3) {
            evt.consume();
        }
    }//GEN-LAST:event_jTxtFldTaxKeyTyped

    private void jTxtFldDiscountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtFldDiscountKeyTyped
//Filter
        if (!Character.isDigit(evt.getKeyChar())  || (jTxtFldDiscount.getText() + evt.getKeyChar()).length() > 3) {
            evt.consume();
        }
    }//GEN-LAST:event_jTxtFldDiscountKeyTyped

    private void jTxtFldTimeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtFldTimeKeyTyped
//Filtrer 
        if (!Character.isDigit(evt.getKeyChar()) || (jTxtFldTime.getText() + evt.getKeyChar()).length() > 32) {
            evt.consume();
        }
    }//GEN-LAST:event_jTxtFldTimeKeyTyped

    private void jTblServInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTblServInputMethodTextChanged

    }//GEN-LAST:event_jTblServInputMethodTextChanged

    private void jButtonLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLastActionPerformed
        //Button last page
        page = totalPage;
        initPagination();//Refreshes table
    }//GEN-LAST:event_jButtonLastActionPerformed

    private void jButtonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextActionPerformed
        //Button next page
        if (page < totalPage) {//Checks page position
            page++;//increments page position
            initPagination();//Refreshes table
        }
    }//GEN-LAST:event_jButtonNextActionPerformed

    private void jButtonPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPreviousActionPerformed
        //Button previous 
        if (page > 1) {//Checks page number
            page--;//Decrement page position
            initPagination();//Refreshes table
        }
    }//GEN-LAST:event_jButtonPreviousActionPerformed

    private void jButtonFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFirstActionPerformed
        //Button  first page 
        page = 1;//Sets page number
        initPagination();//Refreshes table
    }//GEN-LAST:event_jButtonFirstActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed

    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        //On exit of the form stop the connection to SQL DB

        try {
            connct.close();//Close the connection to the DB
            this.finalize();
        } catch (Throwable ex) {
            Logger.getLogger(JFrameClientCars.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_formWindowClosing

    public void executeSQlQuery(String query, String message) throws SQLException {
// Execute The Insert Update And Delete Querys

        Statement st;
        try {
            st = connct.createStatement();
            if ((st.executeUpdate(query)) == 1) {

                JOptionPane.showMessageDialog(null, "Data " + message + " Succefully");
            } else {
                JOptionPane.showMessageDialog(null, "Data Not " + message);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        } finally {
        }

    }

    public void showSrvcsToFields() {
        //Show Srvcs/data to fields

        //Gets table model
        TableModel model = jTblServ.getModel();
        //Gets the index of the selected row
        int index = jTblServ.getSelectedRow();

        jTxtFldIDServ.setText(model.getValueAt(index, 1).toString());
        jCmbBxRepTyp.setSelectedItem(model.getValueAt(index, 3).toString());
        jTxtArDesc.setText(model.getValueAt(index, 4).toString());
        jTxtFldPrice.setText(model.getValueAt(index, 9).toString());
        jTxtFldTax.setText(model.getValueAt(index, 10).toString());
        jTxtFldDiscount.setText(model.getValueAt(index, 11).toString());
        jTxtFldTime.setText(model.getValueAt(index, 12).toString());

    }

    public ArrayList<Cars_Db_clients> getCARList() {
        //Shows all cars in the jframe's table 
        ArrayList<Cars_Db_clients> carList = new ArrayList<Cars_Db_clients>();
        //SQL Query
        String query = "SELECT * FROM  `clients_cars_record` ";
        Statement st;
        ResultSet rs;
        try {
            st = connct.createStatement();
            rs = st.executeQuery(query);
            Cars_Db_clients cars_Db_clients;
            while (rs.next()) {
                cars_Db_clients = new Cars_Db_clients(rs.getString("Car_Reg_Num_cl"), rs.getString("Car_Vin_Num_cl"),
                        rs.getString("Car_Make_cl"), rs.getString("Car_Model_cl"), rs.getString("Car_Mileage_cl"),
                        rs.getString("Car_VehicleType_cl"), rs.getString("Car_FuelSys_cl"), rs.getString("Car_Gearbox_cl"),
                        rs.getString("Car_ManufactureDate_cl"), rs.getString("Car_Drivetrain_cl"), rs.getString("Car_EngineDisplacementl_cl"),
                        rs.getString("Car_Power_cl"), rs.getString("Car_DateTime_Created_cl"));
                carList.add(cars_Db_clients);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return carList;
    }

    public void Show_Users_In_JTableCars() {
        // Display Data In JTable
        ArrayList<Cars_Db_clients> list = getCARList();
        DefaultTableModel model = (DefaultTableModel) jTblCarAdd.getModel();
        Object[] row = new Object[11];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getregNum();
            row[1] = list.get(i).getVIN();
            row[2] = list.get(i).getMake();
            row[3] = list.get(i).getModel();
            row[4] = list.get(i).getMileage();
            row[5] = list.get(i).getType();
            row[6] = list.get(i).getFueling();
            row[7] = list.get(i).getGearbox();
            row[8] = list.get(i).getDrivtrn();
            row[9] = list.get(i).getCC();
            row[10] = list.get(i).getKW();
            model.addRow(row);
        }
    }

    public ArrayList<User> getUsersList() {
// get a list of users from mysql database
        ArrayList<User> usersList = new ArrayList<User>();

        String query = "SELECT * FROM  `clientdetails` ";
        Statement st;
        ResultSet rs;
        try {
            st = connct.createStatement();
            rs = st.executeQuery(query);
            User user;
            while (rs.next()) {
                user = new User(rs.getInt("id"), rs.getString("fname"), rs.getString("lname"),
                        rs.getString("Phn_Num"), rs.getString("alt_Phn_Num"), rs.getString("clients_email"),
                        rs.getString("clients_second_email"), rs.getString("dateTime_Cl_created"), rs.getString("client_Mod_count"),
                        rs.getString("clients_Date_T_LastTModified"));
                usersList.add(user);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return usersList;
    }

    public void Show_Users_In_JTable() {
        // Display Data In JTable
        ArrayList<User> list = getUsersList();
        DefaultTableModel model = (DefaultTableModel) jTblChoseClient.getModel();
        Object[] row = new Object[4];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getId();
            row[1] = list.get(i).getFirstName();
            row[2] = list.get(i).getLastNAme();
            row[3] = list.get(i).getAge();
//Add table rows
            model.addRow(row);
        }
    }

    public void showClientsToTblCl() {
        //Show item/data to fields 
        //Gets table model
        TableModel model = jTblChoseClient.getModel();
        //Gets index at selected row 
        int index = jTblChoseClient.getSelectedRow();
        jTxtFldCLid.setText(model.getValueAt(index, 0).toString());
        jTxtFldCLName.setText(model.getValueAt(index, 1).toString() + "  " + model.getValueAt(index, 2).toString());
    }

    public ArrayList<Parts_serv> getPatrsCList() {
        // get a list of parts from mysql database
        ArrayList<Parts_serv> carList = new ArrayList<Parts_serv>();

        String query = "SELECT * FROM  `new_parts` ";
        Statement st;
        ResultSet rs;

        try {
            st = connct.createStatement();
            rs = st.executeQuery(query);
            Parts_serv parts_serv;
            while (rs.next()) {
                parts_serv = new Parts_serv(rs.getString("parts_OEM_Num"),
                        rs.getString("parts_Origin_c"), rs.getString("parts_For_Make"),
                        rs.getString("parts_For_Model"), rs.getString("parts_Part_Make"),
                        rs.getString("parts_Supplier"), rs.getString("parts_Cost"),
                        rs.getString("parts_Count"), rs.getString("parts_For_Weight"),
                        rs.getString("parts_For_System"), rs.getString("parts_Description"), rs.getBytes("parts_Picture"),
                        rs.getString("parts_VAT"),
                        rs.getString("parts_DateTime"));

                carList.add(parts_serv);

            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {

        }
        return carList;
    }

    public void Show_PatrsCList_In_JTable() {
        // Display Data In JTable
        ArrayList<Parts_serv> list = getPatrsCList();

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        Object[] row = new Object[6];
        for (int i = 0; i < list.size(); i++) {

            row[0] = list.get(i).getOEMNum();
            row[1] = list.get(i).getOriginC();
            row[2] = list.get(i).getFMake();
            row[3] = list.get(i).getFModel();
            row[4] = list.get(i).getPartMake();
            row[5] = list.get(i).getForSys();
//Add row to table
            model.addRow(row);
        }
    }

    public boolean verifyEptyFields() {
//Veriy thhat the textfields are not empty

        String srvArDesc = jTxtArDesc.getText();
        String srvPrice = jTxtFldPrice.getText();
        String srvTax = jTxtFldTax.getText();
        String srvDiscount = jTxtFldDiscount.getText();
        String srvTime = jTxtFldTime.getText();

        // check empty fields
        if (srvArDesc.trim().equals("") || srvPrice.trim().equals("") || srvTax.trim().equals("") || srvDiscount.trim().equals("") || srvTime.trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Fields Are Empty", "Empty ", 2);
            return false;
        } // if everything is ok
        else {
            return true;
        }
    }

    public void clear() {
//Clears textfields and sets combobox repair type to neutral 
        jTxtFldIDServ.setText("");
        jCmbBxRepTyp.setSelectedItem("Repair");
        jTxtArDesc.setText("");
        jTxtFldPrice.setText("");
        jTxtFldTax.setText("");
        jTxtFldDiscount.setText("");
        jTxtFldTime.setText("");
    }

    public List<RepairsService> findAll(int page, int pageSize) {
        //Gets all the info from SQL DB
        List<RepairsService> listProduct = new ArrayList<RepairsService>();

        if (count() == 0) {
            return listProduct;
        }
        try {

            connct.setAutoCommit(false);

            preparedStatement = connct.prepareStatement("SELECT * FROM repairs_maintenance limit ?,?");
            preparedStatement.setInt(1, pageSize * (page - 1));
            preparedStatement.setInt(2, pageSize);
            ResultSet rs = preparedStatement.executeQuery();

            RepairsService repairsService;
            while (rs.next()) {

                repairsService = new RepairsService(rs.getInt("id"),
                        rs.getString("worker"), rs.getString("type"), rs.getString("description"),
                        rs.getString("car_id"), rs.getString("client_id"),
                        rs.getString("part_oem"), rs.getString("timestamp"),
                        rs.getString("price"), rs.getString("vat"),
                        rs.getString("discount"), rs.getString("time"));

                listProduct.add(repairsService);

            }

            connct.commit();
            connct.setAutoCommit(true);

        } catch (SQLException ex) {
            ex.printStackTrace();

        } finally {
            return listProduct;
        }
    }

    public int count() {
        //Count all the rows in the table from the SQL DB
        int counter = 0;

        try {

            connct.setAutoCommit(false);
            preparedStatement = connct.prepareStatement("SELECT count(id) from repairs_maintenance");
            ResultSet rs = preparedStatement.executeQuery();
            while (rs.next()) {
                counter = rs.getInt("count(id)");
            }

            connct.commit();
            connct.setAutoCommit(true);

        } catch (SQLException ex) {
            ex.printStackTrace();

        } finally {
            return counter;
        }
    }

    public List<RepairsService> srchT(int page, int pageSize) {
        //sEARCH with paging

        //Search by order
        int b = jCmbBxOrdrAscDsc.getSelectedIndex();
        String sort = "";

        switch (b) {//Switch search by parameter
            case 0:
                sort = "ASC";//Search by Ascending order
                break;
            case 1:
                sort = "DESC";//Search by Descending order
                break;

            default:
                sort = "ASC";//Defaut parameter for search order
                break;
        }

        //Search by item
        String test = "";
        int a = jCmbBxSrchItems.getSelectedIndex();
        switch (a) {//switch for search combobox states
            case 0:
                test = "id";//ID
                break;
            case 1:
                test = "type";//TYPE
                break;
            case 2:
                test = "car_id";//CAR
                break;
            case 3:
                test = "client_id";//CLIENT
                break;
            case 4:
                test = "part_oem";//PARTS
                break;
            case 5:
                test = "worker";//REPAIRMAN
                break;

            default:
                test = "id";//Defaut state
                break;
        }

        List<RepairsService> listProduct = new ArrayList<RepairsService>();

        if (count() == 0) {
            return listProduct;
        }
        try {

            String val = jTxtFldSrch.getText();//Gets search input
            connct.setAutoCommit(false);

            preparedStatement = connct.prepareStatement("SELECT * FROM  `repairs_maintenance`  WHERE " + test + " like '%" + val + "%' ORDER BY " + test + " " + sort + "  limit ?,?");
            preparedStatement.setInt(1, pageSize * (page - 1));
            preparedStatement.setInt(2, pageSize);
            ResultSet rs = preparedStatement.executeQuery();

            RepairsService repairsService;
            while (rs.next()) {

                repairsService = new RepairsService(rs.getInt("id"),
                        rs.getString("worker"), rs.getString("type"), rs.getString("description"),
                        rs.getString("car_id"), rs.getString("client_id"),
                        rs.getString("part_oem"), rs.getString("timestamp"),
                        rs.getString("price"), rs.getString("vat"),
                        rs.getString("discount"), rs.getString("time"));

                listProduct.add(repairsService);

            }

            connct.commit();
            connct.setAutoCommit(true);

        } catch (SQLException ex) {
            ex.printStackTrace();

        } finally {
            return listProduct;
        }
    }

    private void search() {
//Search execution

//Counts SQL table all rows
        totalData = count();
        //For testing
        System.out.println(totalData);

        rowCountPerPage = Integer.valueOf(jComboBoxPage.getSelectedItem().toString());
        Double totalPageD = Math.ceil(totalData.doubleValue() / rowCountPerPage.doubleValue());
        totalPage = totalPageD.intValue();
//Button for previus first
        if (page.equals(1)) {
            jButtonFirst.setEnabled(false);
            jButtonPrevious.setEnabled(false);
        } else {
            jButtonFirst.setEnabled(true);
            jButtonPrevious.setEnabled(true);
        }
//Buton for last next 
        if (page.equals(totalPage)) {
            jButtonLast.setEnabled(false);
            jButtonNext.setEnabled(false);
        } else {
            jButtonLast.setEnabled(true);
            jButtonNext.setEnabled(true);
        }

        if (page > totalPage) {
            page = 1;//Page number
        }
        //Create new instance of table model
        servicesTableModel = new ServicesTableModel();
        servicesTableModel.setList(srchT(page, rowCountPerPage));
        jTblServ.setModel(servicesTableModel);//Sets table model

        jLabelStatusHalaman.setText("Page " + page + " for " + totalPage);//Page position counter
        jLabelTotalData.setText(("Row count " + totalData));//Row counter
        ResizeForJTables.autoResizeColumn(jTblServ);//Resize the table
    }

    
    private void seticon() {
         //Sets form icon
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Icons/wrench.png")));
    }
    
    /**
     *
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(JFrame_Repairs_Maintenance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(JFrame_Repairs_Maintenance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(JFrame_Repairs_Maintenance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(JFrame_Repairs_Maintenance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(() -> {
//            new JFrame_Repairs_Maintenance().setVisible(true);
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAddCarToService;
    private javax.swing.JButton jBtnAddClCar;
    private javax.swing.JButton jBtnAddOEMpART;
    private javax.swing.JButton jBtnAddPart;
    private javax.swing.JButton jBtnAddToTbl;
    private javax.swing.JButton jBtnBack;
    private javax.swing.JButton jBtnChoseCl;
    private javax.swing.JButton jBtnDeleteToTbl;
    private javax.swing.JButton jBtnHideTbl;
    private javax.swing.JButton jBtnUpdateToTbl;
    private javax.swing.JButton jButtonFirst;
    private javax.swing.JButton jButtonLast;
    private javax.swing.JButton jButtonNext;
    private javax.swing.JButton jButtonPrevious;
    private javax.swing.JComboBox<String> jCmbBoxSrchByItemPart;
    private javax.swing.JComboBox<String> jCmbBoxSrchByPartOrder;
    private javax.swing.JComboBox<String> jCmbBoxSrchCL;
    private javax.swing.JComboBox<String> jCmbBoxSrchItemCar;
    private javax.swing.JComboBox<String> jCmbBoxSrchOrderCar;
    private javax.swing.JComboBox<String> jCmbBoxSrchorder;
    private javax.swing.JComboBox<String> jCmbBxOrdrAscDsc;
    private javax.swing.JComboBox<String> jCmbBxRepTyp;
    private javax.swing.JComboBox<String> jCmbBxSrchItems;
    private javax.swing.JComboBox jComboBoxPage;
    private javax.swing.JFrame jFrmAddCarClient;
    private javax.swing.JFrame jFrmAddParts;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelStatusHalaman;
    private javax.swing.JLabel jLabelTotalData;
    private javax.swing.JLabel jLabel_closeScrv;
    private javax.swing.JLabel jLabel_minAddCC;
    private javax.swing.JLabel jLabel_minimizeScrv;
    private javax.swing.JLabel jLbIDCl;
    private javax.swing.JLabel jLblCarAddNumReg;
    private javax.swing.JLabel jLblClName;
    private javax.swing.JLabel jLblCurrency;
    private javax.swing.JLabel jLblDiscServ;
    private javax.swing.JLabel jLblIDServ;
    private javax.swing.JLabel jLblPercDiscount;
    private javax.swing.JLabel jLblPercVAT;
    private javax.swing.JLabel jLblPic;
    private javax.swing.JLabel jLblPicMain;
    private javax.swing.JLabel jLblPriceServ;
    private javax.swing.JLabel jLblSearchTitle;
    private javax.swing.JLabel jLblSrchByCar;
    private javax.swing.JLabel jLblSrchByItm;
    private javax.swing.JLabel jLblTAXServ;
    private javax.swing.JLabel jLblTiemH;
    private javax.swing.JLabel jLblTimeServ;
    private javax.swing.JLabel jLblTitleSrch;
    private javax.swing.JLabel jLblTopAddCarCL;
    private javax.swing.JLabel jLblTopCloseCarCL;
    private javax.swing.JLabel jLblTopOfPrtsClose;
    private javax.swing.JLabel jLblTopOfPrtsMin;
    private javax.swing.JLabel jLblTopPartsAdd;
    private javax.swing.JLabel jLblTopScrv;
    private javax.swing.JLabel jLblTypeServ;
    private javax.swing.JPanel jPnlAddPartsMain;
    private javax.swing.JPanel jPnlChoseCar;
    private javax.swing.JPanel jPnlChoseClient;
    private javax.swing.JPanel jPnlMain;
    private javax.swing.JPanel jPnlMainAddCarCL;
    private javax.swing.JPanel jPnlOEMTbl;
    private javax.swing.JPanel jPnlOEMadd;
    private javax.swing.JPanel jPnlPaging;
    private javax.swing.JPanel jPnlSearchby;
    private javax.swing.JPanel jPnlTablCars;
    private javax.swing.JPanel jPnlTablCl;
    private javax.swing.JPanel jPnlTop;
    private javax.swing.JPanel jPnlTop2;
    private javax.swing.JPanel jPnlTopPartsAdd;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTblCarAdd;
    private javax.swing.JTable jTblChoseClient;
    private javax.swing.JTable jTblServ;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextArea jTxtArDesc;
    private javax.swing.JTextField jTxtFldCLName;
    private javax.swing.JTextField jTxtFldCLid;
    private javax.swing.JTextField jTxtFldDiscount;
    private javax.swing.JTextField jTxtFldIDServ;
    private javax.swing.JTextField jTxtFldOEMadd;
    private javax.swing.JTextField jTxtFldPrice;
    private javax.swing.JTextField jTxtFldRegNCA;
    private javax.swing.JTextField jTxtFldSrch;
    private javax.swing.JTextField jTxtFldSrchBycar;
    private javax.swing.JTextField jTxtFldSrchCL;
    private javax.swing.JTextField jTxtFldTax;
    private javax.swing.JTextField jTxtFldTime;
    // End of variables declaration//GEN-END:variables
}
