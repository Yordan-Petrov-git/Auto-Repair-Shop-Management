package base.View;

import base.Connection.MyCNX;
import base.Validators.EmailValidUtil;
import base.LogInAs;
import base.Validators.PhoneNumberVerifif;
import base.Utils.PasswordUtils.VerifyPassUtil;
import base.Utils.PasswordUtils.PasswordUtils;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 * Form for user information update
 *
 * @author 0896
 */
public class JFrame_Acc_Manage extends javax.swing.JFrame {

    //Coordinats for jform mouse draging
    int xMouse;
    int yMouse;
    //User iamge   
    String image_path;
    //Connection to SQL DB
    Connection connct = MyCNX.getConnection();

    public JFrame_Acc_Manage() {
        initComponents();

         seticon();//Sets icon
        
        //Disables copy pasete functionality 
        jTextField_Fullname.setTransferHandler(null);//User real name
        jTextField_Username.setTransferHandler(null);//Username
        jPasswordField_1.setTransferHandler(null);//Password
        jPasswordField_2.setTransferHandler(null);//Password retyped
        jTextField_Passphrase.setTransferHandler(null);//Passpherase 
        jTextField_Phone.setTransferHandler(null);//Phone number
        jTextField_Email.setTransferHandler(null);//Emil
        jTextField_Occupation.setTransferHandler(null);//Job title

        //Sets bacground to transparent
        this.setBackground(new Color(0, 0, 0, 0));
        //   Centers the form
        this.setLocationRelativeTo(null);
        jPnlMain.setBackground(new Color(0, 0, 0, 0));
        //Sets defaut iamge
        label_photo.setIcon(new ImageIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/No Camera.png")).getImage().getScaledInstance(150, 160, Image.SCALE_SMOOTH)));
        //Fils the textfields with users information
        initUser();
        //Shows loged in username ÃŸ
        jLblUsrname.setText("Mannage user account :  " + LogInAs.empIdusr);
        // create a button group for the radiobuttons
        ButtonGroup bg = new ButtonGroup();
        bg.add(jRadioButton_Male);
        bg.add(jRadioButton_Female);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPnlMain = new javax.swing.JPanel();
        jPnlBack = new javax.swing.JPanel();
        jLblUsrname = new javax.swing.JLabel();
        jLblUrrImg = new javax.swing.JLabel();
        jButton_SelectImage = new javax.swing.JButton();
        jLblUrrOC = new javax.swing.JLabel();
        jTextField_Occupation = new javax.swing.JTextField();
        jLblUsrMail = new javax.swing.JLabel();
        jTextField_Email = new javax.swing.JTextField();
        jLblUsrPhone = new javax.swing.JLabel();
        jTextField_Phone = new javax.swing.JTextField();
        jLblUsrPasPhr = new javax.swing.JLabel();
        jTextField_Passphrase = new javax.swing.JTextField();
        jLblUrrPassConf = new javax.swing.JLabel();
        jPasswordField_2 = new javax.swing.JPasswordField();
        jLblUrrPass = new javax.swing.JLabel();
        jPasswordField_1 = new javax.swing.JPasswordField();
        jLblUrsName = new javax.swing.JLabel();
        jTextField_Username = new javax.swing.JTextField();
        jLblName = new javax.swing.JLabel();
        jTextField_Fullname = new javax.swing.JTextField();
        label_photo = new javax.swing.JLabel();
        jBtnUpdateInfoUsr = new javax.swing.JButton();
        jLblUrrGend = new javax.swing.JLabel();
        jRadioButton_Male = new javax.swing.JRadioButton();
        jRadioButton_Female = new javax.swing.JRadioButton();
        jLabel_imgpath = new javax.swing.JLabel();
        jLblPicMain = new javax.swing.JLabel();
        jPnlTopFrame = new javax.swing.JPanel();
        jLabel_closeAcUp = new javax.swing.JLabel();
        jLabel_minimizeAcUp = new javax.swing.JLabel();
        jLblTopFrameAcUp = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPnlMain.setBackground(new java.awt.Color(255, 255, 255));
        jPnlMain.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPnlBack.setBackground(new java.awt.Color(0, 84, 140));
        jPnlBack.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLblUsrname.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        jLblUsrname.setForeground(new java.awt.Color(255, 255, 255));
        jLblUsrname.setText("Mannage user account : <Username>");
        jPnlBack.add(jLblUsrname, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 50, 390, -1));

        jLblUrrImg.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLblUrrImg.setForeground(new java.awt.Color(255, 255, 255));
        jLblUrrImg.setText("Image:");
        jPnlBack.add(jLblUrrImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 500, -1, 40));

        jButton_SelectImage.setBackground(new java.awt.Color(0, 84, 140));
        jButton_SelectImage.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton_SelectImage.setForeground(new java.awt.Color(255, 255, 255));
        jButton_SelectImage.setText("Select image");
        jButton_SelectImage.setToolTipText("");
        jButton_SelectImage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_SelectImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SelectImageActionPerformed(evt);
            }
        });
        jPnlBack.add(jButton_SelectImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 500, 130, 40));

        jLblUrrOC.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLblUrrOC.setForeground(new java.awt.Color(255, 255, 255));
        jLblUrrOC.setText("Occupation :");
        jPnlBack.add(jLblUrrOC, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 420, -1, 30));

        jTextField_Occupation.setBackground(new java.awt.Color(62, 62, 62));
        jTextField_Occupation.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField_Occupation.setForeground(new java.awt.Color(255, 255, 255));
        jTextField_Occupation.setToolTipText("Enter job title");
        jTextField_Occupation.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_OccupationKeyTyped(evt);
            }
        });
        jPnlBack.add(jTextField_Occupation, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 420, 240, -1));

        jLblUsrMail.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLblUsrMail.setForeground(new java.awt.Color(255, 255, 255));
        jLblUsrMail.setText("E-mail :");
        jPnlBack.add(jLblUsrMail, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 380, -1, 30));

        jTextField_Email.setBackground(new java.awt.Color(62, 62, 62));
        jTextField_Email.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField_Email.setForeground(new java.awt.Color(255, 255, 255));
        jTextField_Email.setToolTipText("Enter valid email ");
        jTextField_Email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_EmailKeyTyped(evt);
            }
        });
        jPnlBack.add(jTextField_Email, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 380, 240, -1));

        jLblUsrPhone.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLblUsrPhone.setForeground(new java.awt.Color(255, 255, 255));
        jLblUsrPhone.setText("Phone :");
        jPnlBack.add(jLblUsrPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 340, -1, 30));

        jTextField_Phone.setBackground(new java.awt.Color(62, 62, 62));
        jTextField_Phone.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField_Phone.setForeground(new java.awt.Color(255, 255, 255));
        jTextField_Phone.setToolTipText("Phone format : 0893805429");
        jTextField_Phone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_PhoneKeyTyped(evt);
            }
        });
        jPnlBack.add(jTextField_Phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 340, 240, -1));

        jLblUsrPasPhr.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLblUsrPasPhr.setForeground(new java.awt.Color(255, 255, 255));
        jLblUsrPasPhr.setText("Set Passphrase :");
        jPnlBack.add(jLblUsrPasPhr, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 300, -1, 30));

        jTextField_Passphrase.setBackground(new java.awt.Color(62, 62, 62));
        jTextField_Passphrase.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField_Passphrase.setForeground(new java.awt.Color(255, 255, 255));
        jTextField_Passphrase.setToolTipText("Chose passphrase");
        jTextField_Passphrase.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_PassphraseKeyTyped(evt);
            }
        });
        jPnlBack.add(jTextField_Passphrase, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 300, 240, 30));

        jLblUrrPassConf.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLblUrrPassConf.setForeground(new java.awt.Color(255, 255, 255));
        jLblUrrPassConf.setText("Confirm Password :");
        jPnlBack.add(jLblUrrPassConf, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 260, -1, 30));

        jPasswordField_2.setBackground(new java.awt.Color(62, 62, 62));
        jPasswordField_2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jPasswordField_2.setForeground(new java.awt.Color(255, 255, 255));
        jPasswordField_2.setToolTipText("Retype password");
        jPasswordField_2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPasswordField_2KeyTyped(evt);
            }
        });
        jPnlBack.add(jPasswordField_2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 260, 240, -1));

        jLblUrrPass.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLblUrrPass.setForeground(new java.awt.Color(255, 255, 255));
        jLblUrrPass.setText("New password :");
        jPnlBack.add(jLblUrrPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 220, -1, 30));

        jPasswordField_1.setBackground(new java.awt.Color(62, 62, 62));
        jPasswordField_1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jPasswordField_1.setForeground(new java.awt.Color(255, 255, 255));
        jPasswordField_1.setToolTipText("Password should be at least 8 charecters Contains upper and lower case letter number and at least one special charecter [ @#$%^&+= ]");
        jPasswordField_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField_1ActionPerformed(evt);
            }
        });
        jPasswordField_1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordField_1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPasswordField_1KeyTyped(evt);
            }
        });
        jPnlBack.add(jPasswordField_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 220, 240, -1));

        jLblUrsName.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLblUrsName.setForeground(new java.awt.Color(255, 255, 255));
        jLblUrsName.setText("Username :");
        jLblUrsName.setToolTipText("");
        jPnlBack.add(jLblUrsName, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 180, -1, 30));

        jTextField_Username.setBackground(new java.awt.Color(62, 62, 62));
        jTextField_Username.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField_Username.setForeground(new java.awt.Color(255, 255, 255));
        jTextField_Username.setToolTipText("Chose username");
        jTextField_Username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_UsernameActionPerformed(evt);
            }
        });
        jTextField_Username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_UsernameKeyTyped(evt);
            }
        });
        jPnlBack.add(jTextField_Username, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 180, 240, -1));

        jLblName.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLblName.setForeground(new java.awt.Color(255, 255, 255));
        jLblName.setText("Full Name :");
        jPnlBack.add(jLblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 140, -1, 30));

        jTextField_Fullname.setBackground(new java.awt.Color(62, 62, 62));
        jTextField_Fullname.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField_Fullname.setForeground(new java.awt.Color(255, 255, 255));
        jTextField_Fullname.setToolTipText("Enter your name here");
        jTextField_Fullname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_FullnameActionPerformed(evt);
            }
        });
        jTextField_Fullname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_FullnameKeyTyped(evt);
            }
        });
        jPnlBack.add(jTextField_Fullname, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 140, 240, -1));

        label_photo.setBackground(new java.awt.Color(45, 189, 210));
        label_photo.setOpaque(true);
        jPnlBack.add(label_photo, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, 150, 160));

        jBtnUpdateInfoUsr.setBackground(new java.awt.Color(0, 84, 140));
        jBtnUpdateInfoUsr.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jBtnUpdateInfoUsr.setForeground(new java.awt.Color(255, 255, 255));
        jBtnUpdateInfoUsr.setText("Update Info");
        jBtnUpdateInfoUsr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnUpdateInfoUsrActionPerformed(evt);
            }
        });
        jPnlBack.add(jBtnUpdateInfoUsr, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 572, 180, 40));

        jLblUrrGend.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLblUrrGend.setForeground(new java.awt.Color(255, 255, 255));
        jLblUrrGend.setText("Gender:");
        jPnlBack.add(jLblUrrGend, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 470, -1, -1));

        jRadioButton_Male.setBackground(new java.awt.Color(52, 152, 219));
        jRadioButton_Male.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton_Male.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton_Male.setSelected(true);
        jRadioButton_Male.setText("Male");
        jRadioButton_Male.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPnlBack.add(jRadioButton_Male, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 470, -1, -1));

        jRadioButton_Female.setBackground(new java.awt.Color(52, 152, 219));
        jRadioButton_Female.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton_Female.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton_Female.setText("Female");
        jRadioButton_Female.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPnlBack.add(jRadioButton_Female, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 470, -1, -1));

        jLabel_imgpath.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel_imgpath.setForeground(new java.awt.Color(255, 255, 255));
        jPnlBack.add(jLabel_imgpath, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 540, 550, 30));

        jLblPicMain.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/VWbeatleBW.png"))); // NOI18N
        jPnlBack.add(jLblPicMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 810, 650));

        jPnlMain.add(jPnlBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 830, 670));

        jPnlTopFrame.setBackground(new java.awt.Color(51, 51, 51));
        jPnlTopFrame.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_closeAcUp.setBackground(new java.awt.Color(255, 0, 51));
        jLabel_closeAcUp.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel_closeAcUp.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_closeAcUp.setText("  X");
        jLabel_closeAcUp.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jLabel_closeAcUp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel_closeAcUp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_closeAcUpMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_closeAcUpMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_closeAcUpMouseExited(evt);
            }
        });
        jPnlTopFrame.add(jLabel_closeAcUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 0, 30, 30));

        jLabel_minimizeAcUp.setBackground(new java.awt.Color(153, 153, 153));
        jLabel_minimizeAcUp.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel_minimizeAcUp.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_minimizeAcUp.setText("  -");
        jLabel_minimizeAcUp.setToolTipText("");
        jLabel_minimizeAcUp.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jLabel_minimizeAcUp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel_minimizeAcUp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_minimizeAcUpMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_minimizeAcUpMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_minimizeAcUpMouseExited(evt);
            }
        });
        jPnlTopFrame.add(jLabel_minimizeAcUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 0, 30, 30));

        jLblTopFrameAcUp.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLblTopFrameAcUpMouseDragged(evt);
            }
        });
        jLblTopFrameAcUp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLblTopFrameAcUpMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLblTopFrameAcUpMousePressed(evt);
            }
        });
        jPnlTopFrame.add(jLblTopFrameAcUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 30));

        jPnlMain.add(jPnlTopFrame, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, -1));

        getContentPane().add(jPnlMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 700));

        setSize(new java.awt.Dimension(939, 702));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel_closeAcUpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_closeAcUpMouseClicked
        //On form closing dispose of ther form 
        this.dispose();
    }//GEN-LAST:event_jLabel_closeAcUpMouseClicked

    private void jLabel_closeAcUpMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_closeAcUpMouseEntered
  //Lable close on mouse entered set new colour 
        Border label_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.gray);
        jLabel_closeAcUp.setBorder(label_border);
        jLabel_closeAcUp.setForeground(Color.gray);
        jLabel_closeAcUp.setOpaque(true);
        jLabel_closeAcUp.setBackground(Color.RED);
    }//GEN-LAST:event_jLabel_closeAcUpMouseEntered

    private void jLabel_closeAcUpMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_closeAcUpMouseExited
//Lable close on mouse exited return to defaut colours
        Border label_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.white);
        jLabel_closeAcUp.setBorder(label_border);
        jLabel_closeAcUp.setForeground(Color.white);
        jLabel_closeAcUp.setOpaque(false);
    }//GEN-LAST:event_jLabel_closeAcUpMouseExited

    private void jLabel_minimizeAcUpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_minimizeAcUpMouseClicked
//Minimize
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabel_minimizeAcUpMouseClicked

    private void jLabel_minimizeAcUpMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_minimizeAcUpMouseEntered
        // Minimize client management window mouse entered set colours
        Border label_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.gray);
        jLabel_minimizeAcUp.setBorder(label_border);
        jLabel_minimizeAcUp.setForeground(Color.gray);
        jLabel_minimizeAcUp.setOpaque(true);
        jLabel_closeAcUp.setBackground(new Color(153, 153, 153));
    }//GEN-LAST:event_jLabel_minimizeAcUpMouseEntered

    private void jLabel_minimizeAcUpMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_minimizeAcUpMouseExited
       // Minimize client management window mouse exited
        Border label_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.white);
        jLabel_minimizeAcUp.setBorder(label_border);
        jLabel_minimizeAcUp.setForeground(Color.white);
        jLabel_minimizeAcUp.setOpaque(false);
    }//GEN-LAST:event_jLabel_minimizeAcUpMouseExited

    private void jLblTopFrameAcUpMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLblTopFrameAcUpMouseDragged
       // Top bar draging functionality
        int coordX = evt.getXOnScreen();
        int coordY = evt.getYOnScreen();
        this.setLocation(coordX - xMouse, coordY - yMouse);
    }//GEN-LAST:event_jLblTopFrameAcUpMouseDragged

    private void jLblTopFrameAcUpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLblTopFrameAcUpMouseClicked
        // 2 Clicks centr Form
        if (evt.getButton() == MouseEvent.BUTTON1 && evt.getClickCount() == 2) {
            //System.out.println("double clicked");
            this.setLocationRelativeTo(null);
        }
    }//GEN-LAST:event_jLblTopFrameAcUpMouseClicked

    private void jLblTopFrameAcUpMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLblTopFrameAcUpMousePressed
        // Gets the mouse coordinates
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_jLblTopFrameAcUpMousePressed

    private void jButton_SelectImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SelectImageActionPerformed
        //Button Select photo 
        JFileChooser chooser = new JFileChooser();//File choser
        chooser.setCurrentDirectory(new File(System.getProperty("user.home")));//Opens home directory in current user 
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("*.images", "jpg", "png");//file extention filter
        chooser.addChoosableFileFilter(fnef);//Sets the filter
        int ans = chooser.showSaveDialog(null);
        if (ans == JFileChooser.APPROVE_OPTION) {//if image chosen closes with yes
            File selectedPhoto = chooser.getSelectedFile();
            String path = selectedPhoto.getAbsolutePath();// sets chosen file's path
           if(MaxSizeImage(path)){//Limit image size to 5.5 mb
            jLabel_imgpath.setText(path);
            label_photo.setIcon(resetImageSize(path, null));
            image_path = path;
            }else{//if photo is larger 
               System.out.println("Photo larger than 5.5 mb");
               JOptionPane.showMessageDialog(null,"Photo larger than 5.5 mb please select different photo","Selected photo size is too large",2);
           }
        } else {//Image choser exited or closed
            System.out.println("Photo Not Selected ");
        }
    }//GEN-LAST:event_jButton_SelectImageActionPerformed

    private void jTextField_OccupationKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_OccupationKeyTyped
        // Text field charecter lenght filter For the job title of the user
        if (!Character.isAlphabetic(evt.getKeyChar()) || (jTextField_Username.getText() + evt.getKeyChar()).length() > 32) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField_OccupationKeyTyped

    private void jTextField_EmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_EmailKeyTyped
        // Text field charecter lenght filter for the email of the user
        if ((jTextField_Username.getText() + evt.getKeyChar()).length() > 128) {
            evt.consume();
        }

    }//GEN-LAST:event_jTextField_EmailKeyTyped

    private void jTextField_PhoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_PhoneKeyTyped
        // Text field digits lenght filter for the phone number of the user 
        if (!Character.isDigit(evt.getKeyChar()) || (jTextField_Phone.getText() + evt.getKeyChar()).length() > 10) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField_PhoneKeyTyped

    private void jTextField_PassphraseKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_PassphraseKeyTyped
        // Text field digits lenght filter for The secret pasphrase of the user
        if ((jTextField_Passphrase.getText() + evt.getKeyChar()).length() > 32) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField_PassphraseKeyTyped

    private void jPasswordField_2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField_2KeyTyped
        // Text field digits lenght filter for The password confirmation field  of the user
        String pass2 = String.valueOf(jPasswordField_2.getPassword());
        if ((pass2 + evt.getKeyChar()).length() > 64) {
            evt.consume();
        }
    }//GEN-LAST:event_jPasswordField_2KeyTyped

    private void jPasswordField_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField_1ActionPerformed

    }//GEN-LAST:event_jPasswordField_1ActionPerformed

    private void jPasswordField_1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField_1KeyPressed

    }//GEN-LAST:event_jPasswordField_1KeyPressed

    private void jPasswordField_1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField_1KeyTyped
// Text field digits lenght filter for The password of the user
        String pass1 = String.valueOf(jPasswordField_1.getPassword());
        if ((pass1 + evt.getKeyChar()).length() > 64) {
            evt.consume();
        }
    }//GEN-LAST:event_jPasswordField_1KeyTyped

    private void jTextField_UsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_UsernameActionPerformed

    }//GEN-LAST:event_jTextField_UsernameActionPerformed

    private void jTextField_UsernameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_UsernameKeyTyped
// Text field digits lenght filter for The uername 
        if ((jTextField_Username.getText() + evt.getKeyChar()).length() > 32) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField_UsernameKeyTyped

    private void jTextField_FullnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_FullnameActionPerformed

    }//GEN-LAST:event_jTextField_FullnameActionPerformed

    private void jTextField_FullnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_FullnameKeyTyped
// Text field digits lenght filter for The real name of the user 
        if ((jTextField_Fullname.getText() + evt.getKeyChar()).length() > 32) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField_FullnameKeyTyped

    private void jBtnUpdateInfoUsrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnUpdateInfoUsrActionPerformed
//Button for user information update

//Gets input info from textfields
        String fname = jTextField_Fullname.getText();
        String username = jTextField_Username.getText();
        String salt = PasswordUtils.generateSalt(512).get();
        String password = String.valueOf(jPasswordField_1.getPassword());
        String key = PasswordUtils.hashPassword(password, salt).get();
        String phone = jTextField_Phone.getText();
        String gender = "Male";
        String email = jTextField_Email.getText();
        String jobtitle = jTextField_Occupation.getText();
        String passphrase = jTextField_Passphrase.getText();
        String userId = LogInAs.empId;

        if (jRadioButton_Female.isSelected()) {
            gender = "Female";
        }
        if (verifyFields()) {//Verifies thet the fields are not empty
            if (!checkUsername(username)) {//Username check if exists validation 
                if (VerifyPassUtil.validation_Password(password)) {//Password valdiation
                    if (EmailValidUtil.getEmailVer(email)) {//Email validation
                        if (PhoneNumberVerifif.getPhoneNumberVer(phone)) {//Phone number validation

                            if (image_path == null) {//If no image is selected 

                                PreparedStatement ps = null;
                                //  ResultSet rs = null;
                                String registerUserQuery = "UPDATE `users` SET `full_name` = ?, `username` = ?, `password` = ?, `phone` = ?, `gender` = ?, `email`  = ?, `jobtitle` = ?, `secretKey`  = ? , `salt` = ? WHERE `users`.`id`  = ?;";
                                try {
                                    ps = connct.prepareStatement(registerUserQuery);
                                    ps.setString(1, fname);
                                    ps.setString(2, username);
                                    ps.setString(3, key);
                                    ps.setString(4, phone);
                                    ps.setString(5, gender);
                                    ps.setString(6, email);
                                    ps.setString(7, jobtitle);
                                    ps.setString(8, passphrase);
                                    ps.setString(9, salt);
                                    ps.setString(10, userId);

                                    if (ps.executeUpdate() != 0) {//if updated
                                        //Cleans the textfields
                                        clear();
                                        JOptionPane.showMessageDialog(null, "Your Account Has Been Updated");
                                    } else {//If acc is not updated
                                        JOptionPane.showMessageDialog(null, "Error: Check Your Information");
                                    }
                                } catch (SQLException ex) {
                                    Logger.getLogger(Register_Form.class.getName()).log(Level.SEVERE, null, ex);
                                } finally {
                                }

                            } else {// else if image is celected must be up to 40 mb max
                                //SQL DB Prepared Statement 
                                PreparedStatement ps = null;
                                //SQL Prepared Statement 
                                String registerUserQuery = "UPDATE `users` SET `full_name` = ?, `username` = ?, `password` = ?, `phone` = ?, `gender` = ?,`picture` = ?, `email`  = ?, `jobtitle` = ?, `secretKey`  = ?, `salt` = ? WHERE `users`.`id`  = ?;";
                                try {
                                    ps = connct.prepareStatement(registerUserQuery);
                                    ps.setString(1, fname);
                                    ps.setString(2, username);
                                    ps.setString(3, key);
                                    ps.setString(4, phone);
                                    ps.setString(5, gender);
                                    try {
                                        // Save the image as blob in the database
                                        if (image_path != null) {
                                            InputStream image = new FileInputStream(new File(image_path));
                                            ps.setBlob(6, image);
                                        } else {
                                            //If no image selected 
                                            ps.setNull(6, java.sql.Types.NULL);
                                        }
                                    } catch (FileNotFoundException ex) {
                                        Logger.getLogger(Register_Form.class.getName()).log(Level.SEVERE, null, ex);
                                    }
                                    ps.setString(7, email);
                                    ps.setString(8, jobtitle);
                                    ps.setString(9, passphrase);
                                    ps.setString(10, salt);
                                    ps.setString(11, userId);
                                    if (ps.executeUpdate() != 0) {
                                        //If acc succesfully updated 
                                        JOptionPane.showMessageDialog(null, "Your Account Has Been Updated");
                                        //Cleans the textfields
                                        clear();
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Error: Check Your Information");
                                    }
                                } catch (SQLException ex) {
                                    Logger.getLogger(Register_Form.class.getName()).log(Level.SEVERE, null, ex);
                                } finally {
                                }
                            }
                        } else {//If the phone number is not correct Phone number validation

                            JOptionPane.showMessageDialog(null, "Phone number is not correct   ", "Phone number error !", 2);
                        }
                    } else {//Email validation

                        JOptionPane.showMessageDialog(null, "Email not correct Check Your Information", "Email error !", 2);
                    }
                } else {//Password valdiation
                    JOptionPane.showMessageDialog(null, "Password not correct format it should be at least 8 charecters Contains upper and lower case letter number and at least one special charecter [ @#$%^&+= ]", "Email error !", 2);
                }
            }//Username check if exists validation 
        }//No empty fields validation
    }//GEN-LAST:event_jBtnUpdateInfoUsrActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        //On Exit
        try {
            connct.close();//Closes the connection to the SQL DB
            this.finalize();
        } catch (Throwable ex) {
            Logger.getLogger(JFrameClientCars.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

    public void clear() {
//Clears the texztfields and sets the defaut iamge in the label
        label_photo.setIcon(new ImageIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/No Camera.png")).getImage().getScaledInstance(150, 160, Image.SCALE_SMOOTH)));
        image_path = "";
        jLabel_imgpath.setText("");
        jTextField_Fullname.setText("");
        jTextField_Username.setText("");
        jPasswordField_1.setText("");
        jPasswordField_2.setText("");
        jTextField_Passphrase.setText("");
        jTextField_Phone.setText("");
        jTextField_Email.setText("");
        jTextField_Occupation.setText("");
        jRadioButton_Male.setSelected(true);
    }

   
    public boolean verifyFields() {
    // Function to verify the empty fields  
        String fname = jTextField_Fullname.getText();
        String uname = jTextField_Username.getText();
        String phone = jTextField_Phone.getText();
        String pass1 = String.valueOf(jPasswordField_1.getPassword());
        String pass2 = String.valueOf(jPasswordField_2.getPassword());
        String pasphrase = jTextField_Passphrase.getText();
        
        // check empty fields
        if (fname.trim().equals("") || uname.trim().equals("") || phone.trim().equals("")
                || pass1.trim().equals("") || pass2.trim().equals("") || pasphrase.trim().equals("")) {
            JOptionPane.showMessageDialog(null, "One Or More Fields Are Empty", "Empty Fields", 2);
            return false;
        } // check if the two password are equals
        else if (!pass1.equals(pass2)) {
            JOptionPane.showMessageDialog(null, "Password Doesn't Match", "Confirm Password", 2);
            return false;
        } // if everything is ok
        else {
            return true;
        }
    }

    
    public boolean checkUsername(String username) {
//Function to check if the entred username already exists in the database
        PreparedStatement st;
        ResultSet rs;
        boolean username_exist = false;
        String query = "SELECT * FROM `users` WHERE `username` = ?";
        try {
            st = connct.prepareStatement(query);
            st.setString(1, username);
            rs = st.executeQuery();
          if (rs.next()) {
                username_exist = true;
                JOptionPane.showMessageDialog(null, "This Username is Already Taken, Choose Another One", "Username Failed", 2);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Register_Form.class.getName()).log(Level.SEVERE, null, ex);
        }
        return username_exist;
    }

    public ImageIcon resetImageSize(String photopath, byte[] photo) {
    // Image resizing
        ImageIcon myPhoto = null;
        if (photopath != null) {
            myPhoto = new ImageIcon(photopath);
        } else {
            myPhoto = new ImageIcon(photo);
        }
        Image img = myPhoto.getImage();
        Image img1 = img.getScaledInstance(label_photo.getWidth(), label_photo.getHeight(),
                Image.SCALE_SMOOTH);
        ImageIcon ph = new ImageIcon(img1);
        return ph;
    }
    
     public boolean MaxSizeImage(String imagePath) {
        //Limits iamge size
    boolean temp = false;
    File file = new File(imagePath);
    long length = file.length();

    if (length < 5500000) //limits iamge size to  5.5 mb
        temp = true;

    return temp;
}

    public final void initUser() {
          //Load user info in the text fields
        String id = LogInAs.empId;//Gets loged in user id form the SQL DB
        //Gets user info for the loged user
        try {
            Statement st = connct.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM `users` WHERE `id` = " + id + "");
            if (rs.next()) {
                String fullName = rs.getString("full_name");
                String userName = rs.getString("username");
                String phone = rs.getString("phone");
                String email = rs.getString("email");
                String titleJob = rs.getString("jobtitle");
                String secretKey = rs.getString("secretKey");
                jTextField_Fullname.setText(fullName);
                jTextField_Username.setText(userName);
                jTextField_Phone.setText(phone);
                jTextField_Email.setText(email);
                jTextField_Occupation.setText(titleJob);
                jTextField_Passphrase.setText(secretKey);
                byte[] img = rs.getBytes("picture");
                ImageIcon image = new ImageIcon(img);
                Image im = image.getImage();
                ImageIcon newImage = new ImageIcon(im.getScaledInstance(150, 160, Image.SCALE_SMOOTH));
                label_photo.setIcon(newImage);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        } finally {
        }
    }

    
    private void seticon() {
         //Sets form icon
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Icons/wrench.png")));
    }
    
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(JFrame_Acc_Manage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(JFrame_Acc_Manage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(JFrame_Acc_Manage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(JFrame_Acc_Manage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(() -> {
//            new JFrame_Acc_Manage().setVisible(true);
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnUpdateInfoUsr;
    private javax.swing.JButton jButton_SelectImage;
    private javax.swing.JLabel jLabel_closeAcUp;
    private javax.swing.JLabel jLabel_imgpath;
    private javax.swing.JLabel jLabel_minimizeAcUp;
    private javax.swing.JLabel jLblName;
    private javax.swing.JLabel jLblPicMain;
    private javax.swing.JLabel jLblTopFrameAcUp;
    private javax.swing.JLabel jLblUrrGend;
    private javax.swing.JLabel jLblUrrImg;
    private javax.swing.JLabel jLblUrrOC;
    private javax.swing.JLabel jLblUrrPass;
    private javax.swing.JLabel jLblUrrPassConf;
    private javax.swing.JLabel jLblUrsName;
    private javax.swing.JLabel jLblUsrMail;
    private javax.swing.JLabel jLblUsrPasPhr;
    private javax.swing.JLabel jLblUsrPhone;
    private javax.swing.JLabel jLblUsrname;
    private javax.swing.JPasswordField jPasswordField_1;
    private javax.swing.JPasswordField jPasswordField_2;
    private javax.swing.JPanel jPnlBack;
    private javax.swing.JPanel jPnlMain;
    private javax.swing.JPanel jPnlTopFrame;
    private javax.swing.JRadioButton jRadioButton_Female;
    private javax.swing.JRadioButton jRadioButton_Male;
    private javax.swing.JTextField jTextField_Email;
    private javax.swing.JTextField jTextField_Fullname;
    private javax.swing.JTextField jTextField_Occupation;
    private javax.swing.JTextField jTextField_Passphrase;
    private javax.swing.JTextField jTextField_Phone;
    private javax.swing.JTextField jTextField_Username;
    private javax.swing.JLabel label_photo;
    // End of variables declaration//GEN-END:variables
}
